var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/BasicLinechartModule.html",[0,1.095,1,0.623]],["body/modules/BasicLinechartModule.html",[0,1.607,1,1.238,2,1.607,3,1.223,4,2.122,5,2.662,6,2.122,7,2.122,8,2.662,9,2.122,10,2.122,11,2.122,12,1.695,13,0.11,14,1.442,15,2.122,16,2.122,17,1.223,18,1.223,19,0.66,20,0.915,21,0.915,22,2.905,23,1.079,24,2.503,25,0.915,26,0.915,27,1.607,28,2.122,29,1.223,30,0.915,31,0.079,32,0.093,33,0.079]],["title/interfaces/DATA.html",[34,0.3,35,0.3]],["body/interfaces/DATA.html",[13,0.112,17,0.686,18,0.686,19,0.37,20,0.513,21,0.513,23,0.739,25,0.513,26,0.513,27,0.902,29,0.686,30,0.513,31,0.044,32,0.063,33,0.044,34,0.247,35,0.597,36,0.902,37,0.902,38,1.191,39,1.155,40,0.987,41,1.713,42,1.554,43,0.686,44,1.297,45,2.552,46,1.436,47,1.436,48,0.865,49,1.394,50,1.713,51,1.339,52,2.324,53,0.739,54,1.191,55,0.902,56,1.191,57,1.191,58,1.297,59,1.297,60,1.968,61,0.902,62,1.661,63,0.513,64,1.888,65,1.661,66,2.244,67,2.244,68,2.214,69,0.902,70,0.902,71,2.42,72,1.191,73,1.191,74,1.191,75,1.191,76,2.006,77,1.191,78,2.194,79,1.191,80,1.191,81,2.194,82,1.191,83,1.191,84,1.191,85,1.191,86,1.191,87,1.191,88,1.191,89,1.191,90,1.191,91,1.191,92,1.191,93,1.191,94,1.191,95,1.191,96,1.191,97,1.191,98,1.191,99,1.191,100,1.191,101,1.191,102,1.191,103,1.191,104,1.191,105,1.191,106,1.191,107,1.191,108,1.191,109,1.191,110,1.191,111,1.191,112,1.191,113,1.191,114,1.191,115,1.191,116,1.191,117,1.191,118,1.191,119,1.191,120,1.191,121,1.191,122,1.191,123,1.191,124,1.191,125,1.191,126,1.538,127,1.47,128,1.191,129,0.902,130,1.191,131,1.191,132,1.191,133,0.686,134,1.191,135,0.686,136,1.191,137,1.191,138,1.297,139,1.191,140,1.191,141,0.902,142,1.191,143,0.686,144,1.191,145,1.713,146,2.062,147,1.76,148,1.661,149,1.191,150,1.76,151,1.713,152,1.713,153,1.191,154,1.191,155,1.713,156,1.191,157,1.191,158,1.191,159,1.191,160,1.191,161,1.713,162,2.006,163,0.686,164,1.191,165,1.191,166,1.191,167,1.932,168,1.263,169,1.339,170,1.263,171,0.902,172,0.902,173,0.902,174,0.902,175,0.902,176,0.902,177,1.191,178,1.191,179,0.987,180,1.191,181,1.191,182,1.713,183,0.987,184,1.191,185,1.191,186,1.155,187,1.713,188,1.191,189,1.191,190,1.191,191,1.191,192,1.191,193,1.191,194,1.191,195,1.713,196,1.713,197,1.191,198,1.191,199,1.191,200,1.191,201,1.191,202,1.191,203,1.191,204,1.191,205,1.297,206,1.263,207,0.987,208,1.191,209,2.006,210,1.191,211,1.191,212,1.297,213,1.191,214,1.191,215,0.987,216,1.191,217,1.191,218,1.191,219,1.191,220,1.661,221,1.713,222,1.191,223,1.191,224,1.191,225,1.191,226,1.191,227,1.191]],["title/interfaces/Data.html",[34,0.3,35,0.3]],["body/interfaces/Data.html",[12,0.365,13,0.112,14,0.604,17,0.365,18,0.365,19,0.197,20,0.273,21,0.273,23,0.673,25,0.273,26,0.273,29,0.604,30,0.273,31,0.023,32,0.039,33,0.023,34,0.132,35,0.555,36,0.48,38,0.634,39,1.272,40,0.604,42,1.137,43,0.774,44,0.795,46,0.997,47,1.333,48,0.851,49,1.074,51,1.57,55,0.48,65,2.094,126,1.074,127,0.899,133,0.365,135,0.365,138,0.48,143,0.604,146,1.753,148,1.31,150,1.183,163,1.19,167,1.412,168,1.381,169,1.137,170,1.137,179,0.774,183,1.333,186,1.401,206,1.419,207,1.074,215,0.997,220,1.31,228,0.634,229,1.19,230,1.564,231,1.865,232,1.436,233,1.436,234,2.137,235,1.436,236,1.436,237,1.343,238,1.183,239,1.049,240,2.932,241,1.838,242,0.867,243,2.517,244,1.436,245,1.73,246,1.436,247,1.838,248,0.867,249,1.436,250,1.436,251,1.183,252,2.552,253,1.838,254,0.867,255,0.867,256,1.73,257,0.867,258,1.838,259,0.867,260,0.867,261,2.315,262,1.564,263,1.049,264,1.343,265,0.867,266,1.049,267,1.73,268,0.634,269,1.974,270,2.932,271,1.838,272,0.867,273,1.974,274,0.867,275,1.838,276,1.049,277,1.049,278,2.368,279,2.932,280,2.702,281,2.142,282,0.867,283,2.137,284,0.634,285,1.838,286,1.73,287,0.867,288,1.436,289,0.867,290,0.867,291,0.634,292,0.867,293,0.867,294,0.867,295,2.265,296,1.049,297,1.436,298,1.343,299,1.436,300,0.867,301,0.867,302,0.867,303,0.867,304,2.368,305,0.867,306,0.867,307,0.867,308,0.867,309,0.867,310,0.867,311,1.838,312,1.436,313,0.867,314,1.436,315,0.867,316,0.867,317,1.436,318,0.867,319,1.436,320,0.867,321,0.867,322,0.867,323,0.867,324,0.867,325,0.867,326,0.867,327,0.867,328,1.436,329,0.867,330,1.838,331,0.867,332,1.838,333,2.932,334,1.838,335,0.867,336,0.867,337,0.867,338,0.867,339,0.867,340,1.838,341,0.867,342,2.137,343,1.838,344,1.436,345,0.867,346,2.702,347,0.867,348,0.867,349,1.436,350,1.436,351,0.867,352,0.867,353,0.867,354,0.867,355,0.867,356,0.867,357,1.049,358,0.867,359,2.827,360,0.867,361,0.867,362,0.867,363,1.436,364,0.867,365,0.867,366,0.867,367,1.838,368,0.867,369,1.436,370,0.867,371,2.432,372,1.436,373,1.436,374,0.867,375,1.436,376,1.436,377,2.368,378,2.137,379,0.867,380,0.867,381,0.867,382,0.867,383,1.436,384,0.867,385,1.436,386,0.867,387,1.436,388,1.838,389,0.867,390,1.436,391,1.436,392,0.867,393,1.436,394,0.867,395,1.436,396,0.867,397,0.867,398,0.867,399,0.867,400,1.436,401,0.867,402,2.137,403,1.562,404,1.73,405,1.838,406,0.867,407,0.867,408,0.867,409,0.867,410,0.867,411,0.867,412,0.867,413,0.867,414,1.436,415,1.436,416,1.436,417,0.867,418,1.436,419,0.634,420,0.867,421,0.867,422,1.436,423,1.436,424,2.137,425,0.867,426,0.867,427,0.867,428,0.867,429,0.867,430,1.436,431,2.368,432,0.867,433,2.137,434,0.867,435,0.867,436,0.867,437,0.867,438,0.867,439,1.436,440,0.867,441,0.867,442,0.867,443,0.867,444,0.867,445,0.867,446,1.436,447,0.867,448,1.838,449,0.867,450,0.867,451,2.137,452,2.552,453,1.436,454,1.436,455,2.552,456,2.137,457,1.436,458,1.436,459,2.552,460,1.436,461,2.137,462,1.436,463,2.137,464,0.867,465,0.867,466,1.436,467,0.867,468,0.867,469,3.099,470,0.867,471,0.867,472,0.867,473,0.867,474,0.867,475,0.867,476,1.436,477,1.436,478,1.436,479,0.867,480,0.867,481,0.867,482,2.368,483,0.867,484,0.867,485,2.552,486,0.867,487,0.867,488,0.867,489,2.368,490,0.867,491,2.368,492,1.436,493,0.867,494,1.436,495,0.867,496,1.436,497,1.436,498,0.867,499,1.436,500,0.867,501,0.867,502,0.867,503,0.867,504,2.137,505,0.867,506,0.867,507,1.436,508,0.867,509,0.867,510,0.867,511,0.867,512,0.867,513,0.867,514,0.867,515,0.867,516,0.867,517,0.867,518,0.867,519,0.867,520,0.867,521,1.436,522,1.436,523,0.867,524,0.867,525,0.867,526,0.867,527,0.867,528,0.867,529,2.137,530,1.436,531,1.436,532,1.436,533,1.436,534,1.436,535,2.137,536,2.368,537,1.838,538,1.436,539,1.436,540,1.436,541,1.436,542,1.436,543,1.436,544,1.436,545,1.436,546,1.436,547,2.137,548,1.436,549,1.436,550,1.436,551,1.436,552,1.436,553,1.436,554,0.867,555,1.436,556,1.436,557,1.436,558,1.436,559,1.436,560,2.137,561,2.137,562,1.838,563,2.137,564,1.436,565,0.867,566,0.867,567,1.436,568,1.436,569,0.867,570,0.867,571,0.867,572,0.867,573,0.867,574,0.867,575,0.867,576,1.343,577,1.562,578,0.867,579,0.867,580,1.436,581,0.867,582,1.436,583,1.436,584,1.436,585,1.838,586,0.867,587,3.022,588,0.867,589,0.867,590,1.436,591,1.436,592,1.436,593,1.436,594,1.436,595,0.867,596,0.867,597,1.436,598,1.838,599,0.867,600,1.436,601,2.552,602,1.436,603,1.436,604,1.436,605,1.436,606,2.552,607,3.167,608,2.137,609,0.867,610,1.436,611,1.436,612,0.634,613,0.867,614,0.867,615,0.867,616,1.436,617,0.867,618,1.436,619,1.838,620,1.436,621,0.867,622,0.867,623,0.867,624,0.867,625,0.867,626,0.867,627,0.867,628,0.867,629,0.867,630,0.867,631,0.867,632,0.867,633,1.436,634,0.867,635,0.867,636,0.867,637,1.436,638,0.867,639,0.867,640,0.867,641,2.552,642,0.867,643,0.867,644,0.867,645,0.867,646,0.867,647,0.867,648,0.867,649,0.867,650,0.867,651,0.867,652,1.436,653,0.867,654,1.436,655,0.867,656,1.436,657,0.867,658,0.867,659,0.867,660,0.867,661,0.867,662,0.867,663,0.867,664,0.867,665,1.436,666,0.867,667,0.867,668,0.867,669,0.867,670,0.867,671,0.867,672,1.436,673,0.867,674,1.436,675,0.867,676,1.436,677,1.838,678,0.867,679,1.838,680,0.867,681,1.436,682,0.867,683,0.867,684,0.867,685,0.867,686,0.867,687,0.867,688,2.137,689,0.867,690,1.436,691,0.867,692,0.867,693,1.436,694,1.436,695,1.436,696,0.867,697,0.867,698,0.867,699,0.867,700,1.436,701,0.867,702,0.867,703,0.867,704,0.867,705,1.436,706,0.867,707,0.867,708,0.867,709,0.867,710,0.867,711,0.867,712,0.867,713,0.867,714,0.867,715,2.137,716,2.137,717,0.867,718,0.867,719,0.867,720,0.867,721,1.436,722,0.867,723,0.867,724,0.867,725,0.867,726,0.867,727,0.867,728,1.343,729,0.867,730,0.867,731,0.867,732,0.867,733,0.867,734,1.436,735,1.436,736,1.436,737,1.436,738,0.867,739,0.867,740,0.867,741,0.867,742,1.436,743,0.867,744,0.867,745,0.867,746,0.867,747,0.867,748,0.867,749,1.436,750,1.436,751,1.436,752,1.436,753,0.867,754,0.867,755,0.867,756,0.867,757,0.634,758,0.867,759,1.436,760,0.867,761,0.867,762,0.867,763,0.867,764,0.867,765,0.867,766,0.867,767,0.867,768,0.867,769,1.049,770,0.867,771,0.634,772,0.867,773,0.867,774,0.867]],["title/injectables/DataService.html",[53,0.623,63,0.623]],["body/injectables/DataService.html",[13,0.111,17,0.507,18,0.507,19,0.274,20,1.118,21,1.118,23,0.589,25,0.38,26,0.38,27,0.667,29,0.507,30,0.38,31,0.033,32,0.051,33,0.033,34,0.183,35,0.591,37,0.667,39,0.964,40,0.507,41,0.88,42,1.615,43,0.507,44,1.035,45,2.256,46,0.964,47,1.409,48,1.106,49,1.299,50,0.88,51,1.343,52,1.887,53,0.589,54,0.88,55,0.667,56,0.88,57,0.88,58,1.268,59,1.268,60,2.017,61,1.268,62,1.766,63,0.589,64,1.984,65,1.916,66,2.257,67,2.257,68,2.233,69,1.035,70,1.035,71,2.53,72,1.366,73,1.366,74,1.366,75,1.366,76,2.162,77,1.366,78,2.331,79,1.366,80,1.366,81,2.331,82,1.366,83,1.366,84,1.366,85,1.366,86,1.366,87,1.366,88,1.366,89,1.366,90,1.366,91,1.366,92,1.366,93,1.366,94,1.366,95,1.366,96,1.366,97,1.366,98,1.366,99,1.366,100,1.366,101,1.366,102,1.366,103,1.366,104,1.366,105,1.366,106,1.366,107,1.366,108,1.366,109,1.366,110,1.366,111,1.366,112,1.366,113,1.366,114,1.366,115,1.366,116,1.366,117,1.366,118,1.366,119,1.366,120,1.366,121,1.366,122,1.366,123,1.366,124,1.366,125,1.366,126,1.534,127,1.593,128,1.674,129,1.035,130,1.674,131,1.366,132,1.674,133,0.787,134,1.674,135,0.787,136,1.674,137,1.674,138,1.547,139,1.366,140,1.887,141,1.766,142,1.366,143,0.787,144,0.88,145,1.887,146,1.964,147,1.813,148,1.813,149,1.366,150,1.766,151,1.366,152,1.366,153,0.88,154,0.88,155,1.366,156,0.88,157,0.88,158,0.88,159,0.88,160,0.88,161,1.366,162,1.674,163,0.507,164,0.88,165,0.88,166,0.88,167,1.766,168,1.245,169,1.299,170,1.245,171,0.667,172,0.667,173,0.667,174,0.667,175,0.667,176,0.667,177,0.88,178,0.88,179,0.787,180,0.88,181,0.88,182,1.366,183,0.787,184,1.366,185,1.366,186,1.087,187,1.674,188,1.366,189,0.88,190,0.88,191,1.366,192,0.88,193,0.88,194,0.88,195,1.366,196,1.366,197,0.88,198,0.88,199,0.88,200,0.88,201,0.88,202,0.88,203,0.88,204,0.88,205,1.035,206,1.245,207,1.087,208,0.88,209,1.674,210,0.88,211,0.88,212,1.035,213,0.88,214,0.88,215,1.087,216,0.88,217,0.88,218,0.88,219,0.88,220,1.708,221,1.674,222,1.366,223,0.88,224,0.88,225,0.88,226,0.88,227,0.88,230,1.035,231,2.043,238,1.035,262,1.708,371,1.674,775,1.204,776,1.869,777,1.366,778,1.869,779,1.366,780,3.508,781,1.869,782,1.204,783,1.204,784,2.795,785,1.204,786,1.204,787,1.204,788,1.204,789,1.204,790,1.204,791,1.204,792,1.204,793,1.204,794,1.204,795,1.204,796,1.204]],["title/coverage.html",[797,1.961]],["body/coverage.html",[12,1.268,13,0.106,19,0.684,20,1.2,21,1.2,31,0.081,32,0.095,33,0.081,34,0.531,35,0.531,37,1.936,48,0.949,53,0.949,63,0.949,163,1.268,228,2.557,229,1.268,797,2.201,798,3.012,799,3.012,800,3.012,801,3.012,802,3.012,803,3.499,804,3.012,805,3.012,806,3.012,807,3.012,808,3.012,809,3.012]],["title/dependencies.html",[3,1,810,1.213]],["body/dependencies.html",[3,1.264,13,0.11,25,0.947,31,0.081,32,0.094,33,0.081,251,1.662,811,3.004,812,2.908,813,3.004,814,3.004,815,3.004,816,3.493,817,2.553,818,3.004,819,3.004,820,2.195,821,3.493,822,3.004,823,3.004,824,3.004,825,3.004,826,3.004,827,3.004]],["title/index.html",[43,0.698,828,1.66,829,1.66]],["body/index.html",[1,0.642,13,0.11,14,1.153,19,0.463,23,0.642,24,1.489,26,0.863,28,1.489,30,0.642,31,0.055,32,0.074,33,0.055,34,0.415,35,0.582,39,0.858,40,0.858,42,1.153,46,1.392,47,1.573,48,0.642,49,0.858,51,1.634,58,1.127,59,1.909,60,1.966,61,1.83,62,1.127,63,0.863,64,1.515,66,1.515,67,1.515,68,1.515,69,1.127,70,1.127,127,1.655,133,0.858,135,0.858,141,1.515,143,0.858,147,1.515,168,0.858,169,1.153,170,0.858,171,1.127,172,1.127,173,1.127,174,1.127,175,1.127,176,1.127,179,1.495,183,1.153,186,1.302,205,1.127,206,1.452,207,1.153,212,1.127,215,0.858,229,1.616,230,1.127,237,2.001,238,1.127,239,1.489,243,2.653,245,2.001,251,1.127,256,2.26,261,2.001,262,2.009,263,1.489,264,2.001,266,1.489,267,1.489,268,1.489,269,2.001,273,2.416,276,1.489,277,1.489,284,1.489,286,2.001,291,2.26,295,2.596,296,1.489,298,2.001,357,1.489,403,2.26,404,2.521,419,2.26,576,1.489,577,1.489,612,1.489,728,1.489,757,1.489,769,1.489,771,2.26,777,2.001,779,2.001,810,1.489,812,1.489,820,1.489,830,2.037,831,2.037,832,2.037,833,2.037,834,2.037,835,2.037,836,2.037,837,2.738,838,2.738,839,2.037,840,2.037,841,2.037,842,2.037,843,2.037,844,2.037,845,2.037,846,2.037,847,2.037,848,2.738,849,3.307,850,3.553,851,2.037,852,2.037,853,2.037,854,2.037,855,2.037,856,2.738,857,2.037,858,2.037,859,2.738,860,3.093,861,2.037,862,3.307,863,3.093,864,2.037,865,2.738,866,2.037,867,2.037,868,2.037,869,2.037,870,2.738,871,2.037,872,2.037,873,3.093,874,2.738,875,2.738,876,2.037,877,3.093,878,2.738,879,3.093,880,2.037,881,2.037,882,2.037,883,2.037,884,2.037,885,2.037,886,2.037,887,2.037,888,2.037,889,2.738,890,2.037,891,2.037,892,2.037,893,2.037,894,2.037,895,2.037,896,2.037,897,2.037,898,2.037,899,2.037,900,2.037,901,2.037,902,2.037,903,2.037,904,2.037,905,2.037,906,2.037,907,2.037,908,2.037,909,2.037,910,2.037,911,2.037,912,2.037,913,2.037,914,2.037,915,2.037,916,2.037,917,3.093,918,2.037,919,2.037,920,2.037,921,2.037,922,2.037]],["title/modules.html",[2,1.485]],["body/modules.html",[1,0.995,2,1.747,13,0.097,31,0.085,32,0.097,33,0.085,281,2.307,817,2.307,923,3.157,924,3.157]],["title/overview.html",[925,1.961]],["body/overview.html",[0,1.942,1,1.223,3,1.274,4,2.212,5,2.212,6,2.212,7,2.212,8,2.212,9,2.212,10,2.212,11,2.212,12,1.667,13,0.103,14,1.477,15,2.212,16,2.212,31,0.082,32,0.095,33,0.082,36,1.675,53,0.954,126,1.56,129,1.675,229,1.274,925,2.212]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":186,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["0&&this.idzoom>0)||event.deltay0&&this.idzoom>0",{"_index":699,"title":{},"body":{"interfaces/Data.html":{}}}],["0,0",{"_index":273,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["0,40",{"_index":523,"title":{},"body":{"interfaces/Data.html":{}}}],["0,55",{"_index":569,"title":{},"body":{"interfaces/Data.html":{}}}],["0,95",{"_index":568,"title":{},"body":{"interfaces/Data.html":{}}}],["0.1",{"_index":603,"title":{},"body":{"interfaces/Data.html":{}}}],["0.11.4",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":276,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["0.3",{"_index":605,"title":{},"body":{"interfaces/Data.html":{}}}],["0.9.3",{"_index":841,"title":{},"body":{"index.html":{}}}],["05:47:24,459\";\"pc6\";\"off",{"_index":72,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["06:06:24,459\";\"pc5\";\"on",{"_index":93,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["06:21:24,459\";\"pc5\";\"on",{"_index":89,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["06:32:24,459\";\"pc5\";\"on",{"_index":91,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["06:47:24,459\";\"pc6\";\"on",{"_index":73,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["06:59:24,459\";\"pc6\";\"off",{"_index":74,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["07",{"_index":67,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["07:29:24,459\";\"pc5\";\"on",{"_index":87,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["08:32:24,459\";\"pc6\";\"on",{"_index":79,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["09:06:24,459\";\"pc6\";\"on",{"_index":82,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["0;1",{"_index":872,"title":{},"body":{"index.html":{}}}],["1",{"_index":126,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"overview.html":{}}}],["1)x=this.datazoom[0].values.length",{"_index":698,"title":{},"body":{"interfaces/Data.html":{}}}],["1.5px",{"_index":506,"title":{},"body":{"interfaces/Data.html":{}}}],["10",{"_index":500,"title":{},"body":{"interfaces/Data.html":{}}}],["100",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["10px",{"_index":641,"title":{},"body":{"interfaces/Data.html":{}}}],["11:00:24,459\";\"pc6\";\"off",{"_index":77,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["12.0.3",{"_index":812,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13",{"_index":625,"title":{},"body":{"interfaces/Data.html":{}}}],["13/14",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["13:00:24,459\";\"pc5\";\"off",{"_index":90,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["13px",{"_index":549,"title":{},"body":{"interfaces/Data.html":{}}}],["14:15:24,459\";\"pc5\";\"off",{"_index":92,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15",{"_index":566,"title":{},"body":{"interfaces/Data.html":{}}}],["15:47:19,423\";\"pc3\";\"on",{"_index":115,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:47:19,423\";\"temperature_cuisine\";\"26.7",{"_index":95,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:47:19,423\";\"temperature_salon\";\"26.34",{"_index":106,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:47:24,459\";\"pc5\";\"off",{"_index":84,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:47:24,459\";\"pc6\";\"off",{"_index":69,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["15:48:05,264\";\"temperature_salon\";\"26.38",{"_index":107,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:48:20,279\";\"pc3\";\"off",{"_index":116,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:48:20,279\";\"temperature_cuisine\";\"26.740000000000002",{"_index":96,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:50:00,776\";\"pc3\";\"on",{"_index":117,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:50:00,776\";\"temperature_cuisine\";\"26.76",{"_index":97,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:53:05,275\";\"temperature_salon\";\"26.36",{"_index":108,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:55:00,275\";\"pc3\";\"off",{"_index":118,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:55:00,275\";\"temperature_cuisine\";\"26.72",{"_index":98,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["15:58:05,252\";\"temperature_salon\";\"26.34",{"_index":109,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["160,0",{"_index":528,"title":{},"body":{"interfaces/Data.html":{}}}],["160,40",{"_index":527,"title":{},"body":{"interfaces/Data.html":{}}}],["160,55",{"_index":573,"title":{},"body":{"interfaces/Data.html":{}}}],["160,95",{"_index":574,"title":{},"body":{"interfaces/Data.html":{}}}],["16:08:05,234\";\"temperature_salon\";\"26.32",{"_index":110,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:10:00,202\";\"pc3\";\"on",{"_index":119,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:10:00,202\";\"temperature_cuisine\";\"26.68",{"_index":99,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:13:05,237\";\"temperature_salon\";\"26.28",{"_index":111,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:15:00,197\";\"pc3\";\"off",{"_index":120,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:15:00,197\";\"temperature_cuisine\";\"26.64",{"_index":100,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:23:05,172\";\"temperature_salon\";\"26.22",{"_index":112,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:24:50,493\";\"pc3\";\"on",{"_index":121,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:24:50,493\";\"temperature_cuisine\";\"26.560000000000002",{"_index":101,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:28:05,244\";\"temperature_salon\";\"26.16",{"_index":113,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:29:50,204\";\"pc3\";\"off",{"_index":122,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:29:50,204\";\"temperature_cuisine\";\"26.5",{"_index":102,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:29:55,490\";\"temperature_salon\";\"26.14",{"_index":114,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:34:50,177\";\"pc3\";\"on",{"_index":123,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:34:50,177\";\"temperature_cuisine\";\"26.46",{"_index":103,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:39:50,128\";\"pc3\";\"off",{"_index":124,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:39:50,128\";\"temperature_cuisine\";\"26.5",{"_index":104,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:44:50,065\";\"pc3\";\"on",{"_index":125,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["16:44:50,065\";\"temperature_cuisine\";\"26.52",{"_index":105,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["18:15:24,459\";\"pc6\";\"off",{"_index":80,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["18:21:24,459\";\"pc6\";\"on",{"_index":75,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["19:36:24,459\";\"pc5\";\"off",{"_index":94,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["19:36:24,459\";\"pc6\";\"off",{"_index":83,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["19:47:24,459\";\"pc6\";\"on",{"_index":70,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["2",{"_index":129,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"overview.html":{}}}],["2.1.0",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":304,"title":{},"body":{"interfaces/Data.html":{}}}],["200",{"_index":266,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["2016",{"_index":66,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["20:59:24,459\";\"pc5\";\"off",{"_index":88,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["20px",{"_index":637,"title":{},"body":{"interfaces/Data.html":{}}}],["22:47:24,459\";\"pc5\";\"on",{"_index":85,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["22:55:24,459\";\"pc5\";\"off",{"_index":86,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["25",{"_index":68,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["26",{"_index":71,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["27",{"_index":76,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["28",{"_index":78,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["29",{"_index":81,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["2px",{"_index":608,"title":{},"body":{"interfaces/Data.html":{}}}],["3",{"_index":131,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["30",{"_index":575,"title":{},"body":{"interfaces/Data.html":{}}}],["3498db",{"_index":503,"title":{},"body":{"interfaces/Data.html":{}}}],["3px",{"_index":620,"title":{},"body":{"interfaces/Data.html":{}}}],["4",{"_index":133,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["4/4",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":554,"title":{},"body":{"interfaces/Data.html":{}}}],["5",{"_index":135,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["50",{"_index":537,"title":{},"body":{"interfaces/Data.html":{}}}],["6",{"_index":58,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["6.6.0",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["67/70",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":562,"title":{},"body":{"interfaces/Data.html":{}}}],["75,40",{"_index":524,"title":{},"body":{"interfaces/Data.html":{}}}],["75,55",{"_index":570,"title":{},"body":{"interfaces/Data.html":{}}}],["80",{"_index":536,"title":{},"body":{"interfaces/Data.html":{}}}],["80,45",{"_index":525,"title":{},"body":{"interfaces/Data.html":{}}}],["80,50",{"_index":571,"title":{},"body":{"interfaces/Data.html":{}}}],["85,40",{"_index":526,"title":{},"body":{"interfaces/Data.html":{}}}],["85,55",{"_index":572,"title":{},"body":{"interfaces/Data.html":{}}}],["90",{"_index":565,"title":{},"body":{"interfaces/Data.html":{}}}],["900",{"_index":263,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["92",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["add",{"_index":419,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["adjusted",{"_index":717,"title":{},"body":{"interfaces/Data.html":{}}}],["alea",{"_index":224,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["alea=math.round(math.random",{"_index":226,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["angular",{"_index":833,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":25,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":874,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":865,"title":{},"body":{"index.html":{}}}],["app.component.ts",{"_index":888,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":864,"title":{},"body":{"index.html":{}}}],["append(\"path",{"_index":677,"title":{},"body":{"interfaces/Data.html":{}}}],["append('g",{"_index":429,"title":{},"body":{"interfaces/Data.html":{}}}],["area",{"_index":230,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["area'+index",{"_index":600,"title":{},"body":{"interfaces/Data.html":{}}}],["areaupdate",{"_index":674,"title":{},"body":{"interfaces/Data.html":{}}}],["array",{"_index":267,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["attr(\"dx",{"_index":561,"title":{},"body":{"interfaces/Data.html":{}}}],["attr(\"dy",{"_index":563,"title":{},"body":{"interfaces/Data.html":{}}}],["attr(\"fill",{"_index":497,"title":{},"body":{"interfaces/Data.html":{}}}],["attr(\"id",{"_index":489,"title":{},"body":{"interfaces/Data.html":{}}}],["attr(\"points",{"_index":522,"title":{},"body":{"interfaces/Data.html":{}}}],["attr(\"r",{"_index":499,"title":{},"body":{"interfaces/Data.html":{}}}],["attr(\"stroke",{"_index":504,"title":{},"body":{"interfaces/Data.html":{}}}],["attr(\"transform",{"_index":535,"title":{},"body":{"interfaces/Data.html":{}}}],["attr('class",{"_index":587,"title":{},"body":{"interfaces/Data.html":{}}}],["attr('cx",{"_index":623,"title":{},"body":{"interfaces/Data.html":{}}}],["attr('cy",{"_index":624,"title":{},"body":{"interfaces/Data.html":{}}}],["attr('d",{"_index":601,"title":{},"body":{"interfaces/Data.html":{}}}],["attr('fill",{"_index":627,"title":{},"body":{"interfaces/Data.html":{}}}],["attr('opacity",{"_index":604,"title":{},"body":{"interfaces/Data.html":{}}}],["attr('r",{"_index":626,"title":{},"body":{"interfaces/Data.html":{}}}],["attr('transform",{"_index":430,"title":{},"body":{"interfaces/Data.html":{}}}],["attribute",{"_index":468,"title":{},"body":{"interfaces/Data.html":{}}}],["au",{"_index":310,"title":{},"body":{"interfaces/Data.html":{}}}],["auto",{"_index":725,"title":{},"body":{"interfaces/Data.html":{}}}],["avec",{"_index":424,"title":{},"body":{"interfaces/Data.html":{}}}],["axis",{"_index":270,"title":{},"body":{"interfaces/Data.html":{}}}],["bas",{"_index":513,"title":{},"body":{"interfaces/Data.html":{}}}],["based",{"_index":716,"title":{},"body":{"interfaces/Data.html":{}}}],["basic",{"_index":26,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["basiclinechart",{"_index":830,"title":{},"body":{"index.html":{}}}],["basiclinechartcomponent",{"_index":12,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/Data.html":{},"coverage.html":{},"overview.html":{}}}],["basiclinechartmodule",{"_index":1,"title":{"modules/BasicLinechartModule.html":{}},"body":{"modules/BasicLinechartModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["before",{"_index":335,"title":{},"body":{"interfaces/Data.html":{}}}],["below",{"_index":870,"title":{},"body":{"index.html":{}}}],["between",{"_index":275,"title":{},"body":{"interfaces/Data.html":{}}}],["biggest",{"_index":319,"title":{},"body":{"interfaces/Data.html":{}}}],["bind",{"_index":873,"title":{},"body":{"index.html":{}}}],["black",{"_index":471,"title":{},"body":{"interfaces/Data.html":{}}}],["bleu",{"_index":494,"title":{},"body":{"interfaces/Data.html":{}}}],["boolean",{"_index":357,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["both",{"_index":238,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["both\"|\"line\"|\"area\",interpolation",{"_index":174,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["bottom",{"_index":306,"title":{},"body":{"interfaces/Data.html":{}}}],["browse",{"_index":924,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":817,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bug",{"_index":843,"title":{},"body":{"index.html":{}}}],["build",{"_index":369,"title":{},"body":{"interfaces/Data.html":{}}}],["buildevent",{"_index":421,"title":{},"body":{"interfaces/Data.html":{}}}],["buildstyledata(element:data",{"_index":449,"title":{},"body":{"interfaces/Data.html":{}}}],["buildzoom",{"_index":475,"title":{},"body":{"interfaces/Data.html":{}}}],["call(d3.axisbottom(this.scalex",{"_index":589,"title":{},"body":{"interfaces/Data.html":{}}}],["call(d3.axisleft(this.scaley",{"_index":593,"title":{},"body":{"interfaces/Data.html":{}}}],["call(d3.axisleft(this.scaley).ticks(this.scale(this.data,\"ymax",{"_index":592,"title":{},"body":{"interfaces/Data.html":{}}}],["cce5f6",{"_index":498,"title":{},"body":{"interfaces/Data.html":{}}}],["cercle",{"_index":492,"title":{},"body":{"interfaces/Data.html":{}}}],["cet",{"_index":539,"title":{},"body":{"interfaces/Data.html":{}}}],["change",{"_index":336,"title":{},"body":{"interfaces/Data.html":{}}}],["change(i",{"_index":915,"title":{},"body":{"index.html":{}}}],["changes",{"_index":405,"title":{},"body":{"interfaces/Data.html":{}}}],["changes.currenttime&&!changes.currenttime.firstchange&&this.data.length!=0",{"_index":417,"title":{},"body":{"interfaces/Data.html":{}}}],["changes.data&&!changes.data.firstchange",{"_index":407,"title":{},"body":{"interfaces/Data.html":{}}}],["changes.data&&!changes.data.firstchange&&this.range[0]!=0&&this.range[1]!=0)||(changes.range&&!changes.range.firstchange",{"_index":409,"title":{},"body":{"interfaces/Data.html":{}}}],["chart",{"_index":594,"title":{},"body":{"interfaces/Data.html":{}}}],["check",{"_index":768,"title":{},"body":{"interfaces/Data.html":{}}}],["clair",{"_index":495,"title":{},"body":{"interfaces/Data.html":{}}}],["class",{"_index":30,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["cli",{"_index":834,"title":{},"body":{"index.html":{}}}],["cluster_basiclinechartmodule",{"_index":9,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["cluster_basiclinechartmodule_declarations",{"_index":10,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["cluster_basiclinechartmodule_exports",{"_index":11,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["code",{"_index":234,"title":{},"body":{"interfaces/Data.html":{}}}],["color",{"_index":168,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["color:string",{"_index":173,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["colors",{"_index":735,"title":{},"body":{"interfaces/Data.html":{}}}],["compenent",{"_index":265,"title":{},"body":{"interfaces/Data.html":{}}}],["compo",{"_index":294,"title":{},"body":{"interfaces/Data.html":{}}}],["component",{"_index":229,"title":{},"body":{"interfaces/Data.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["components",{"_index":862,"title":{},"body":{"index.html":{}}}],["configure",{"_index":584,"title":{},"body":{"interfaces/Data.html":{}}}],["console.warn(\"data",{"_index":465,"title":{},"body":{"interfaces/Data.html":{}}}],["const",{"_index":151,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["constructor",{"_index":138,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["constructor(data",{"_index":900,"title":{},"body":{"index.html":{}}}],["constructor(private",{"_index":368,"title":{},"body":{"interfaces/Data.html":{}}}],["contain",{"_index":329,"title":{},"body":{"interfaces/Data.html":{}}}],["contains",{"_index":291,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["contenu",{"_index":519,"title":{},"body":{"interfaces/Data.html":{}}}],["contiendra",{"_index":541,"title":{},"body":{"interfaces/Data.html":{}}}],["continuous",{"_index":237,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["control",{"_index":715,"title":{},"body":{"interfaces/Data.html":{}}}],["controlcolor(color",{"_index":739,"title":{},"body":{"interfaces/Data.html":{}}}],["controldomain():[number,number",{"_index":730,"title":{},"body":{"interfaces/Data.html":{}}}],["controlrange(min:number",{"_index":718,"title":{},"body":{"interfaces/Data.html":{}}}],["controlspeedzoom",{"_index":743,"title":{},"body":{"interfaces/Data.html":{}}}],["copy",{"_index":312,"title":{},"body":{"interfaces/Data.html":{}}}],["coverage",{"_index":797,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creer",{"_index":422,"title":{},"body":{"interfaces/Data.html":{}}}],["css",{"_index":734,"title":{},"body":{"interfaces/Data.html":{}}}],["ctrl",{"_index":352,"title":{},"body":{"interfaces/Data.html":{}}}],["ctrl+wheel",{"_index":858,"title":{},"body":{"index.html":{}}}],["current",{"_index":403,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["currentime",{"_index":871,"title":{},"body":{"index.html":{}}}],["currentimechange",{"_index":876,"title":{},"body":{"index.html":{}}}],["currenttime",{"_index":298,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["currenttime2",{"_index":899,"title":{},"body":{"index.html":{}}}],["currenttimechange",{"_index":299,"title":{},"body":{"interfaces/Data.html":{}}}],["currenttimeline",{"_index":343,"title":{},"body":{"interfaces/Data.html":{}}}],["currenttimeselected:boolean",{"_index":345,"title":{},"body":{"interfaces/Data.html":{}}}],["currenttimeselector",{"_index":622,"title":{},"body":{"interfaces/Data.html":{}}}],["curve(d3.curvestepafter",{"_index":460,"title":{},"body":{"interfaces/Data.html":{}}}],["d",{"_index":177,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["d.foreach(element",{"_index":180,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["d2",{"_index":193,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["d2.foreach(element",{"_index":197,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["d3",{"_index":251,"title":{},"body":{"interfaces/Data.html":{},"dependencies.html":{},"index.html":{}}}],["d3.area",{"_index":331,"title":{},"body":{"interfaces/Data.html":{}}}],["d3.bisectleft(time",{"_index":691,"title":{},"body":{"interfaces/Data.html":{}}}],["d3.bisectright(time",{"_index":696,"title":{},"body":{"interfaces/Data.html":{}}}],["d3.line",{"_index":332,"title":{},"body":{"interfaces/Data.html":{}}}],["d3.scalelinear",{"_index":328,"title":{},"body":{"interfaces/Data.html":{}}}],["d3.scaletime",{"_index":326,"title":{},"body":{"interfaces/Data.html":{}}}],["d3.select(this.timeline.nativeelement",{"_index":428,"title":{},"body":{"interfaces/Data.html":{}}}],["d3.select(this.timeline.nativeelement).on(\"mousemove",{"_index":432,"title":{},"body":{"interfaces/Data.html":{}}}],["da",{"_index":182,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["da2",{"_index":203,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["data",{"_index":35,"title":{"interfaces/DATA.html":{},"interfaces/Data.html":{}},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{},"index.html":{}}}],["data's",{"_index":39,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["data.foreach",{"_index":760,"title":{},"body":{"interfaces/Data.html":{}}}],["data1:data",{"_index":891,"title":{},"body":{"index.html":{}}}],["data2:data",{"_index":892,"title":{},"body":{"index.html":{}}}],["data3:data",{"_index":893,"title":{},"body":{"index.html":{}}}],["data4:data",{"_index":894,"title":{},"body":{"index.html":{}}}],["data5:data",{"_index":895,"title":{},"body":{"index.html":{}}}],["data6:data",{"_index":896,"title":{},"body":{"index.html":{}}}],["dataexample1",{"_index":128,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["dataexample2",{"_index":130,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["dataexample3",{"_index":132,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["dataexample4",{"_index":134,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["dataexample5",{"_index":136,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["dataexample6",{"_index":137,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["dataexamples",{"_index":885,"title":{},"body":{"index.html":{}}}],["dataservice",{"_index":63,"title":{"injectables/DataService.html":{}},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"coverage.html":{},"index.html":{}}}],["dataset",{"_index":60,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["datatest:data",{"_index":897,"title":{},"body":{"index.html":{}}}],["datazoom",{"_index":311,"title":{},"body":{"interfaces/Data.html":{}}}],["date",{"_index":557,"title":{},"body":{"interfaces/Data.html":{}}}],["date((t.replace",{"_index":164,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["date1",{"_index":564,"title":{},"body":{"interfaces/Data.html":{}}}],["date2",{"_index":567,"title":{},"body":{"interfaces/Data.html":{}}}],["datum([[this.currenttime,this.controldomain()[0]],[this.currenttime,this.svgheight",{"_index":617,"title":{},"body":{"interfaces/Data.html":{}}}],["datum(element.values",{"_index":609,"title":{},"body":{"interfaces/Data.html":{}}}],["datum(this.datazoom[index].values",{"_index":599,"title":{},"body":{"interfaces/Data.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["default",{"_index":262,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["defined",{"_index":780,"title":{},"body":{"injectables/DataService.html":{}}}],["definition",{"_index":330,"title":{},"body":{"interfaces/Data.html":{}}}],["delete",{"_index":845,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/BasicLinechartModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":38,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{}}}],["determine",{"_index":746,"title":{},"body":{"interfaces/Data.html":{}}}],["difference",{"_index":321,"title":{},"body":{"interfaces/Data.html":{}}}],["different",{"_index":879,"title":{},"body":{"index.html":{}}}],["dimensionner",{"_index":516,"title":{},"body":{"interfaces/Data.html":{}}}],["discrete",{"_index":236,"title":{},"body":{"interfaces/Data.html":{}}}],["discretevalue(data",{"_index":773,"title":{},"body":{"interfaces/Data.html":{}}}],["display",{"_index":268,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["displayed",{"_index":867,"title":{},"body":{"index.html":{}}}],["div",{"_index":285,"title":{},"body":{"interfaces/Data.html":{}}}],["documentation",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":278,"title":{},"body":{"interfaces/Data.html":{}}}],["domain",{"_index":269,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["don't",{"_index":877,"title":{},"body":{"index.html":{}}}],["donnée",{"_index":426,"title":{},"body":{"interfaces/Data.html":{}}}],["draw",{"_index":482,"title":{},"body":{"interfaces/Data.html":{}}}],["drawaxis",{"_index":578,"title":{},"body":{"interfaces/Data.html":{}}}],["drawlineandpath",{"_index":595,"title":{},"body":{"interfaces/Data.html":{}}}],["drawlinecurrenttime",{"_index":613,"title":{},"body":{"interfaces/Data.html":{}}}],["drawscrollbar",{"_index":631,"title":{},"body":{"interfaces/Data.html":{}}}],["drawtooltips",{"_index":484,"title":{},"body":{"interfaces/Data.html":{}}}],["du",{"_index":518,"title":{},"body":{"interfaces/Data.html":{}}}],["dynamic",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":279,"title":{},"body":{"interfaces/Data.html":{}}}],["element,i",{"_index":763,"title":{},"body":{"interfaces/Data.html":{}}}],["element,index",{"_index":597,"title":{},"body":{"interfaces/Data.html":{}}}],["element.color",{"_index":469,"title":{},"body":{"interfaces/Data.html":{}}}],["element.color=\"black",{"_index":472,"title":{},"body":{"interfaces/Data.html":{}}}],["element.label",{"_index":466,"title":{},"body":{"interfaces/Data.html":{}}}],["element.style==\"both",{"_index":452,"title":{},"body":{"interfaces/Data.html":{}}}],["element.values.filter((element",{"_index":687,"title":{},"body":{"interfaces/Data.html":{}}}],["element.values.foreach((element",{"_index":689,"title":{},"body":{"interfaces/Data.html":{}}}],["element[1]=x",{"_index":201,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["elementref",{"_index":240,"title":{},"body":{"interfaces/Data.html":{}}}],["elements,index",{"_index":761,"title":{},"body":{"interfaces/Data.html":{}}}],["elements.values.foreach",{"_index":762,"title":{},"body":{"interfaces/Data.html":{}}}],["emit",{"_index":297,"title":{},"body":{"interfaces/Data.html":{}}}],["en",{"_index":507,"title":{},"body":{"interfaces/Data.html":{}}}],["enter",{"_index":676,"title":{},"body":{"interfaces/Data.html":{}}}],["equal",{"_index":727,"title":{},"body":{"interfaces/Data.html":{}}}],["event",{"_index":359,"title":{},"body":{"interfaces/Data.html":{}}}],["event.preventdefault",{"_index":446,"title":{},"body":{"interfaces/Data.html":{}}}],["event:mouseevent",{"_index":652,"title":{},"body":{"interfaces/Data.html":{}}}],["eventemitter",{"_index":241,"title":{},"body":{"interfaces/Data.html":{}}}],["example",{"_index":59,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["examples",{"_index":856,"title":{},"body":{"index.html":{}}}],["export",{"_index":29,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["extract",{"_index":41,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["extérieur",{"_index":493,"title":{},"body":{"interfaces/Data.html":{}}}],["f",{"_index":147,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["f(v",{"_index":166,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["fafafa",{"_index":530,"title":{},"body":{"interfaces/Data.html":{}}}],["false",{"_index":346,"title":{},"body":{"interfaces/Data.html":{}}}],["family",{"_index":550,"title":{},"body":{"interfaces/Data.html":{}}}],["faut",{"_index":515,"title":{},"body":{"interfaces/Data.html":{}}}],["fff",{"_index":505,"title":{},"body":{"interfaces/Data.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{},"index.html":{}}}],["fill",{"_index":143,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["filter",{"_index":158,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["fix",{"_index":844,"title":{},"body":{"index.html":{}}}],["float",{"_index":770,"title":{},"body":{"interfaces/Data.html":{}}}],["fonc",{"_index":502,"title":{},"body":{"interfaces/Data.html":{}}}],["fonction",{"_index":517,"title":{},"body":{"interfaces/Data.html":{}}}],["for(let",{"_index":672,"title":{},"body":{"interfaces/Data.html":{}}}],["format",{"_index":40,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["function",{"_index":61,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["generate",{"_index":191,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["generated",{"_index":832,"title":{},"body":{"index.html":{}}}],["generatedata",{"_index":777,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["generatedata(\"pc6\",\"#124568\",\"both",{"_index":881,"title":{},"body":{"index.html":{}}}],["generatedata(\"temperature_salon",{"_index":883,"title":{},"body":{"index.html":{}}}],["generatedata(str",{"_index":782,"title":{},"body":{"injectables/DataService.html":{}}}],["generatedata(str:string",{"_index":171,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["generateexample",{"_index":140,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["generateexample(str",{"_index":785,"title":{},"body":{"injectables/DataService.html":{}}}],["generateexample(str:string",{"_index":192,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["getrandomint",{"_index":778,"title":{},"body":{"injectables/DataService.html":{}}}],["getrandomint(x",{"_index":787,"title":{},"body":{"injectables/DataService.html":{}}}],["getrandomint(x:number",{"_index":223,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["gettime",{"_index":165,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["getting",{"_index":828,"title":{"index.html":{}},"body":{}}],["give",{"_index":57,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["gold",{"_index":218,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["grey",{"_index":645,"title":{},"body":{"interfaces/Data.html":{}}}],["h",{"_index":385,"title":{},"body":{"interfaces/Data.html":{}}}],["handlekeydown(event",{"_index":360,"title":{},"body":{"interfaces/Data.html":{}}}],["handlekeyup",{"_index":365,"title":{},"body":{"interfaces/Data.html":{}}}],["heavy",{"_index":846,"title":{},"body":{"index.html":{}}}],["height",{"_index":264,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["hex",{"_index":736,"title":{},"body":{"interfaces/Data.html":{}}}],["hexacode",{"_index":232,"title":{},"body":{"interfaces/Data.html":{}}}],["horizontal",{"_index":576,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["hostlistener",{"_index":242,"title":{},"body":{"interfaces/Data.html":{}}}],["hostlistener('window:keydown",{"_index":358,"title":{},"body":{"interfaces/Data.html":{}}}],["hostlistener('window:keyup",{"_index":364,"title":{},"body":{"interfaces/Data.html":{}}}],["https://github.com/projet",{"_index":851,"title":{},"body":{"index.html":{}}}],["https://projet",{"_index":836,"title":{},"body":{"index.html":{}}}],["i:number=0;i",{"_index":774,"title":{},"body":{"interfaces/Data.html":{}}}],["id",{"_index":161,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["identifier",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["idzoom",{"_index":314,"title":{},"body":{"interfaces/Data.html":{}}}],["if(!this.controlcolor(element.color",{"_index":464,"title":{},"body":{"interfaces/Data.html":{}}}],["if((s==\"xmin\"&&((i==0&&index==0)||element[0]res",{"_index":766,"title":{},"body":{"interfaces/Data.html":{}}}],["if((s==\"ymin\"&&((i==0&&index==0)||element[1]res",{"_index":764,"title":{},"body":{"interfaces/Data.html":{}}}],["if((this.domain[0]==0&&this.domain[1]==0)||this.discretevalue(this.data",{"_index":731,"title":{},"body":{"interfaces/Data.html":{}}}],["if(alea==0",{"_index":227,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["if(element.interpolation==\"step",{"_index":453,"title":{},"body":{"interfaces/Data.html":{}}}],["if(element.style==\"area",{"_index":451,"title":{},"body":{"interfaces/Data.html":{}}}],["if(element.style==\"line",{"_index":461,"title":{},"body":{"interfaces/Data.html":{}}}],["if(event.ctrlkey&&!this.zoomselected",{"_index":362,"title":{},"body":{"interfaces/Data.html":{}}}],["if(event.deltay200",{"_index":701,"title":{},"body":{"interfaces/Data.html":{}}}],["if(i==1",{"_index":916,"title":{},"body":{"index.html":{}}}],["if(i==2",{"_index":919,"title":{},"body":{"index.html":{}}}],["if(i==3",{"_index":921,"title":{},"body":{"index.html":{}}}],["if(i>=0&&i",{"_index":692,"title":{},"body":{"interfaces/Data.html":{}}}],["if(index==this.data.length",{"_index":376,"title":{},"body":{"interfaces/Data.html":{}}}],["if(posthis.scale(this.datazoom,\"xmax",{"_index":711,"title":{},"body":{"interfaces/Data.html":{}}}],["if(s=='on",{"_index":190,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["if(this.currenttime==0",{"_index":614,"title":{},"body":{"interfaces/Data.html":{}}}],["if(this.currenttime>=this.scale(this.datazoom,\"xmin\")&&this.currenttime",{"_index":685,"title":{},"body":{"interfaces/Data.html":{}}}],["if(this.currenttimeselected",{"_index":434,"title":{},"body":{"interfaces/Data.html":{}}}],["if(this.data.length!=0",{"_index":414,"title":{},"body":{"interfaces/Data.html":{}}}],["if(this.data.length!=0)if(this.zoomselected){this.activezoom(event",{"_index":442,"title":{},"body":{"interfaces/Data.html":{}}}],["if(this.discretevalue(this.data",{"_index":590,"title":{},"body":{"interfaces/Data.html":{}}}],["if(this.maxtimemin",{"_index":723,"title":{},"body":{"interfaces/Data.html":{}}}],["if(this.mintime>min",{"_index":720,"title":{},"body":{"interfaces/Data.html":{}}}],["if(this.speedzoom1",{"_index":744,"title":{},"body":{"interfaces/Data.html":{}}}],["if(x==0",{"_index":225,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["if(x>this.datazoom[0].values.length",{"_index":697,"title":{},"body":{"interfaces/Data.html":{}}}],["il",{"_index":514,"title":{},"body":{"interfaces/Data.html":{}}}],["implements",{"_index":260,"title":{},"body":{"interfaces/Data.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/BasicLinechartModule.html":{},"index.html":{}}}],["index",{"_index":43,"title":{"index.html":{}},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["index:number",{"_index":450,"title":{},"body":{"interfaces/Data.html":{}}}],["index=this.datazoom.length",{"_index":673,"title":{},"body":{"interfaces/Data.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["information",{"_index":474,"title":{},"body":{"interfaces/Data.html":{}}}],["init",{"_index":366,"title":{},"body":{"interfaces/Data.html":{}}}],["initialize",{"_index":379,"title":{},"body":{"interfaces/Data.html":{}}}],["injectable",{"_index":53,"title":{"injectables/DataService.html":{}},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":775,"title":{},"body":{"injectables/DataService.html":{}}}],["input",{"_index":243,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["install",{"_index":850,"title":{},"body":{"index.html":{}}}],["installation",{"_index":847,"title":{},"body":{"index.html":{}}}],["integer",{"_index":769,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["integers",{"_index":729,"title":{},"body":{"interfaces/Data.html":{}}}],["interface",{"_index":34,"title":{"interfaces/DATA.html":{},"interfaces/Data.html":{}},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":36,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"overview.html":{}}}],["interne",{"_index":309,"title":{},"body":{"interfaces/Data.html":{}}}],["interpolation",{"_index":170,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["intérieur",{"_index":501,"title":{},"body":{"interfaces/Data.html":{}}}],["inverse",{"_index":341,"title":{},"body":{"interfaces/Data.html":{}}}],["isn't",{"_index":737,"title":{},"body":{"interfaces/Data.html":{}}}],["it's",{"_index":280,"title":{},"body":{"interfaces/Data.html":{}}}],["key",{"_index":353,"title":{},"body":{"interfaces/Data.html":{}}}],["keyboard",{"_index":354,"title":{},"body":{"interfaces/Data.html":{}}}],["keyboardevent",{"_index":361,"title":{},"body":{"interfaces/Data.html":{}}}],["l",{"_index":152,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["la",{"_index":556,"title":{},"body":{"interfaces/Data.html":{}}}],["label",{"_index":49,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["label:string",{"_index":172,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["last",{"_index":348,"title":{},"body":{"interfaces/Data.html":{}}}],["lastdatalength:number",{"_index":337,"title":{},"body":{"interfaces/Data.html":{}}}],["lastminlocaltime",{"_index":703,"title":{},"body":{"interfaces/Data.html":{}}}],["lastpos",{"_index":351,"title":{},"body":{"interfaces/Data.html":{}}}],["launch",{"_index":139,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["le",{"_index":485,"title":{},"body":{"interfaces/Data.html":{}}}],["left",{"_index":307,"title":{},"body":{"interfaces/Data.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["length",{"_index":334,"title":{},"body":{"interfaces/Data.html":{}}}],["length:number",{"_index":719,"title":{},"body":{"interfaces/Data.html":{}}}],["lengthtime",{"_index":322,"title":{},"body":{"interfaces/Data.html":{}}}],["lib",{"_index":255,"title":{},"body":{"interfaces/Data.html":{}}}],["library",{"_index":831,"title":{},"body":{"index.html":{}}}],["lightgrey",{"_index":639,"title":{},"body":{"interfaces/Data.html":{}}}],["line",{"_index":206,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["line'+index",{"_index":610,"title":{},"body":{"interfaces/Data.html":{}}}],["linear",{"_index":207,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["linechart",{"_index":256,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["linechart#main",{"_index":853,"title":{},"body":{"index.html":{}}}],["linechart.component",{"_index":27,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["linechart.component.ts",{"_index":228,"title":{},"body":{"interfaces/Data.html":{},"coverage.html":{}}}],["linechart.module.ts",{"_index":22,"title":{},"body":{"modules/BasicLinechartModule.html":{}}}],["linechart.service.ts",{"_index":37,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["linechart.service.ts:102",{"_index":792,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:107",{"_index":793,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:112",{"_index":794,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:117",{"_index":795,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:122",{"_index":781,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:139",{"_index":789,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:172",{"_index":783,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:191",{"_index":790,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:201",{"_index":786,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:233",{"_index":788,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:37",{"_index":796,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart.service.ts:97",{"_index":791,"title":{},"body":{"injectables/DataService.html":{}}}],["linechart/src/lib/basic",{"_index":21,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["lines",{"_index":448,"title":{},"body":{"interfaces/Data.html":{}}}],["lineupdate",{"_index":679,"title":{},"body":{"interfaces/Data.html":{}}}],["lineupdate.enter",{"_index":684,"title":{},"body":{"interfaces/Data.html":{}}}],["listener",{"_index":630,"title":{},"body":{"interfaces/Data.html":{}}}],["listeners",{"_index":420,"title":{},"body":{"interfaces/Data.html":{}}}],["lui",{"_index":508,"title":{},"body":{"interfaces/Data.html":{}}}],["lément",{"_index":540,"title":{},"body":{"interfaces/Data.html":{}}}],["main",{"_index":890,"title":{},"body":{"index.html":{}}}],["map",{"_index":155,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["marge",{"_index":308,"title":{},"body":{"interfaces/Data.html":{}}}],["margin",{"_index":301,"title":{},"body":{"interfaces/Data.html":{}}}],["margin:{top:number,right:number,bottom:number,left:number",{"_index":302,"title":{},"body":{"interfaces/Data.html":{}}}],["matches",{"_index":756,"title":{},"body":{"interfaces/Data.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":722,"title":{},"body":{"interfaces/Data.html":{}}}],["maximum",{"_index":748,"title":{},"body":{"interfaces/Data.html":{}}}],["maxtime",{"_index":320,"title":{},"body":{"interfaces/Data.html":{}}}],["merge(areaupdate",{"_index":678,"title":{},"body":{"interfaces/Data.html":{}}}],["merge(lineupdate",{"_index":681,"title":{},"body":{"interfaces/Data.html":{}}}],["methods",{"_index":776,"title":{},"body":{"injectables/DataService.html":{}}}],["min",{"_index":688,"title":{},"body":{"interfaces/Data.html":{}}}],["min,max",{"_index":724,"title":{},"body":{"interfaces/Data.html":{}}}],["min=this.mintime",{"_index":721,"title":{},"body":{"interfaces/Data.html":{}}}],["minimum",{"_index":747,"title":{},"body":{"interfaces/Data.html":{}}}],["minlocaltime",{"_index":702,"title":{},"body":{"interfaces/Data.html":{}}}],["mintime",{"_index":318,"title":{},"body":{"interfaces/Data.html":{}}}],["mitton",{"_index":838,"title":{},"body":{"index.html":{}}}],["mix",{"_index":878,"title":{},"body":{"index.html":{}}}],["mode",{"_index":338,"title":{},"body":{"interfaces/Data.html":{}}}],["modetooltips",{"_index":339,"title":{},"body":{"interfaces/Data.html":{}}}],["module",{"_index":0,"title":{"modules/BasicLinechartModule.html":{}},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/BasicLinechartModule.html":{},"modules.html":{}}}],["mouse",{"_index":350,"title":{},"body":{"interfaces/Data.html":{}}}],["mousedown",{"_index":651,"title":{},"body":{"interfaces/Data.html":{}}}],["mouseevent",{"_index":433,"title":{},"body":{"interfaces/Data.html":{}}}],["mouseleave",{"_index":655,"title":{},"body":{"interfaces/Data.html":{}}}],["mouseup",{"_index":657,"title":{},"body":{"interfaces/Data.html":{}}}],["move",{"_index":859,"title":{},"body":{"index.html":{}}}],["movecurrenttime(event",{"_index":710,"title":{},"body":{"interfaces/Data.html":{}}}],["movement",{"_index":709,"title":{},"body":{"interfaces/Data.html":{}}}],["même",{"_index":509,"title":{},"body":{"interfaces/Data.html":{}}}],["name",{"_index":231,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["new",{"_index":163,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["ngafterviewinit",{"_index":380,"title":{},"body":{"interfaces/Data.html":{}}}],["ngmodule",{"_index":24,"title":{},"body":{"modules/BasicLinechartModule.html":{},"index.html":{}}}],["ngonchanges(changes",{"_index":406,"title":{},"body":{"interfaces/Data.html":{}}}],["ngoninit",{"_index":370,"title":{},"body":{"interfaces/Data.html":{}}}],["none",{"_index":491,"title":{},"body":{"interfaces/Data.html":{}}}],["normal",{"_index":340,"title":{},"body":{"interfaces/Data.html":{}}}],["notch",{"_index":316,"title":{},"body":{"interfaces/Data.html":{}}}],["notes",{"_index":842,"title":{},"body":{"index.html":{}}}],["notre",{"_index":543,"title":{},"body":{"interfaces/Data.html":{}}}],["npm",{"_index":849,"title":{},"body":{"index.html":{}}}],["number",{"_index":51,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["number,number",{"_index":179,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["obtain",{"_index":145,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["on(\"mousedown",{"_index":628,"title":{},"body":{"interfaces/Data.html":{}}}],["on(\"mouseleave",{"_index":437,"title":{},"body":{"interfaces/Data.html":{}}}],["on(\"mouseover",{"_index":445,"title":{},"body":{"interfaces/Data.html":{}}}],["on(\"mouseup",{"_index":443,"title":{},"body":{"interfaces/Data.html":{}}}],["on(\"wheel",{"_index":440,"title":{},"body":{"interfaces/Data.html":{}}}],["one",{"_index":771,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["oninit",{"_index":244,"title":{},"body":{"interfaces/Data.html":{}}}],["option().style",{"_index":741,"title":{},"body":{"interfaces/Data.html":{}}}],["optional",{"_index":784,"title":{},"body":{"injectables/DataService.html":{}}}],["others",{"_index":292,"title":{},"body":{"interfaces/Data.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["output",{"_index":245,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["overview",{"_index":925,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":810,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["param",{"_index":146,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["parameter",{"_index":757,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["parameters",{"_index":141,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["parse",{"_index":62,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["parse(str",{"_index":149,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["parsebool",{"_index":779,"title":{},"body":{"injectables/DataService.html":{},"index.html":{}}}],["parsebool(s",{"_index":188,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["parsefloat",{"_index":212,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["parsefloat)contains",{"_index":884,"title":{},"body":{"index.html":{}}}],["patch",{"_index":840,"title":{},"body":{"index.html":{}}}],["pc4",{"_index":204,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["peardependencies",{"_index":854,"title":{},"body":{"index.html":{}}}],["pinard.github.io",{"_index":839,"title":{},"body":{"index.html":{}}}],["pinard/lib",{"_index":852,"title":{},"body":{"index.html":{}}}],["pink",{"_index":214,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["pointe",{"_index":511,"title":{},"body":{"interfaces/Data.html":{}}}],["pos",{"_index":705,"title":{},"body":{"interfaces/Data.html":{}}}],["pos)*(lengthlocaltime/lastlengthlocaltime",{"_index":704,"title":{},"body":{"interfaces/Data.html":{}}}],["position",{"_index":349,"title":{},"body":{"interfaces/Data.html":{}}}],["positionnement",{"_index":558,"title":{},"body":{"interfaces/Data.html":{}}}],["positive",{"_index":728,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["pour",{"_index":555,"title":{},"body":{"interfaces/Data.html":{}}}],["precise",{"_index":753,"title":{},"body":{"interfaces/Data.html":{}}}],["private",{"_index":65,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["projects/basic",{"_index":20,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{}}}],["properties",{"_index":44,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["providedin",{"_index":54,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["public",{"_index":127,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["purple",{"_index":205,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["push",{"_index":355,"title":{},"body":{"interfaces/Data.html":{}}}],["px",{"_index":635,"title":{},"body":{"interfaces/Data.html":{}}}],["random",{"_index":222,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["range",{"_index":295,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["range2",{"_index":898,"title":{},"body":{"index.html":{}}}],["rangechange",{"_index":296,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["ranges",{"_index":875,"title":{},"body":{"index.html":{}}}],["recommanded",{"_index":235,"title":{},"body":{"interfaces/Data.html":{}}}],["red",{"_index":619,"title":{},"body":{"interfaces/Data.html":{}}}],["renderer",{"_index":367,"title":{},"body":{"interfaces/Data.html":{}}}],["renderer2",{"_index":246,"title":{},"body":{"interfaces/Data.html":{}}}],["replace",{"_index":470,"title":{},"body":{"interfaces/Data.html":{}}}],["represents",{"_index":612,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["required",{"_index":866,"title":{},"body":{"index.html":{}}}],["res",{"_index":759,"title":{},"body":{"interfaces/Data.html":{}}}],["res=element[0",{"_index":767,"title":{},"body":{"interfaces/Data.html":{}}}],["res=element[1",{"_index":765,"title":{},"body":{"interfaces/Data.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/BasicLinechartModule.html":{},"overview.html":{}}}],["result",{"_index":31,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":33,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":167,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["returns",{"_index":148,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["rgb",{"_index":233,"title":{},"body":{"interfaces/Data.html":{}}}],["right",{"_index":305,"title":{},"body":{"interfaces/Data.html":{}}}],["root",{"_index":55,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["run",{"_index":848,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":150,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["s.color",{"_index":742,"title":{},"body":{"interfaces/Data.html":{}}}],["s.slice(1",{"_index":157,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["s.split(\";\").map",{"_index":156,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["s.trim()).filter(s",{"_index":154,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["s:string)=>number):data",{"_index":176,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["s=='off",{"_index":187,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["s=='on",{"_index":185,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["sa",{"_index":510,"title":{},"body":{"interfaces/Data.html":{}}}],["save",{"_index":473,"title":{},"body":{"interfaces/Data.html":{}}}],["scale",{"_index":252,"title":{},"body":{"interfaces/Data.html":{}}}],["scale(data",{"_index":758,"title":{},"body":{"interfaces/Data.html":{}}}],["scaled",{"_index":726,"title":{},"body":{"interfaces/Data.html":{}}}],["scalelinear",{"_index":250,"title":{},"body":{"interfaces/Data.html":{}}}],["scaletime",{"_index":249,"title":{},"body":{"interfaces/Data.html":{}}}],["scalex",{"_index":325,"title":{},"body":{"interfaces/Data.html":{}}}],["scaley",{"_index":327,"title":{},"body":{"interfaces/Data.html":{}}}],["scroll",{"_index":284,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["scrollbar",{"_index":286,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["scrollbarselected:boolean",{"_index":347,"title":{},"body":{"interfaces/Data.html":{}}}],["section",{"_index":869,"title":{},"body":{"index.html":{}}}],["segoe",{"_index":551,"title":{},"body":{"interfaces/Data.html":{}}}],["selected",{"_index":344,"title":{},"body":{"interfaces/Data.html":{}}}],["selection",{"_index":253,"title":{},"body":{"interfaces/Data.html":{}}}],["selector",{"_index":254,"title":{},"body":{"interfaces/Data.html":{}}}],["sensor",{"_index":50,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["sensorid",{"_index":45,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["service",{"_index":56,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["seul",{"_index":425,"title":{},"body":{"interfaces/Data.html":{}}}],["several",{"_index":861,"title":{},"body":{"index.html":{}}}],["show",{"_index":887,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":247,"title":{},"body":{"interfaces/Data.html":{}}}],["size",{"_index":548,"title":{},"body":{"interfaces/Data.html":{}}}],["smallest",{"_index":317,"title":{},"body":{"interfaces/Data.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["specified",{"_index":868,"title":{},"body":{"index.html":{}}}],["specify",{"_index":313,"title":{},"body":{"interfaces/Data.html":{}}}],["speed",{"_index":274,"title":{},"body":{"interfaces/Data.html":{}}}],["speedzoom",{"_index":277,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["spécifique",{"_index":559,"title":{},"body":{"interfaces/Data.html":{}}}],["started",{"_index":829,"title":{"index.html":{}},"body":{}}],["statements",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":215,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["step\",parsebool",{"_index":882,"title":{},"body":{"index.html":{}}}],["step\",this.parsebool",{"_index":209,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["step\"|\"linear",{"_index":175,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["stpe",{"_index":447,"title":{},"body":{"interfaces/Data.html":{}}}],["str",{"_index":64,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{},"index.html":{}}}],["str.trim().split(\"\\n\").map(s",{"_index":153,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["string",{"_index":42,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["string):boolean",{"_index":740,"title":{},"body":{"interfaces/Data.html":{}}}],["string):number",{"_index":189,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["style",{"_index":169,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["style(\"color",{"_index":553,"title":{},"body":{"interfaces/Data.html":{}}}],["style(\"display",{"_index":490,"title":{},"body":{"interfaces/Data.html":{}}}],["style(\"fill",{"_index":529,"title":{},"body":{"interfaces/Data.html":{}}}],["style(\"font",{"_index":547,"title":{},"body":{"interfaces/Data.html":{}}}],["style(\"opacity\",\"0.9",{"_index":532,"title":{},"body":{"interfaces/Data.html":{}}}],["style(\"stroke",{"_index":533,"title":{},"body":{"interfaces/Data.html":{}}}],["style(\"stroke\",\"#3498db",{"_index":531,"title":{},"body":{"interfaces/Data.html":{}}}],["style('fill",{"_index":606,"title":{},"body":{"interfaces/Data.html":{}}}],["style('stroke",{"_index":607,"title":{},"body":{"interfaces/Data.html":{}}}],["styles",{"_index":259,"title":{},"body":{"interfaces/Data.html":{}}}],["summary",{"_index":855,"title":{},"body":{"index.html":{}}}],["support",{"_index":923,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":281,"title":{},"body":{"interfaces/Data.html":{},"modules.html":{}}}],["svgheight",{"_index":324,"title":{},"body":{"interfaces/Data.html":{}}}],["svgwidth",{"_index":323,"title":{},"body":{"interfaces/Data.html":{}}}],["synchronize",{"_index":860,"title":{},"body":{"index.html":{}}}],["t",{"_index":52,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["tab",{"_index":159,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["tab[1",{"_index":160,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["table",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":257,"title":{},"body":{"interfaces/Data.html":{}}}],["ter",{"_index":837,"title":{},"body":{"index.html":{}}}],["test",{"_index":886,"title":{},"body":{"index.html":{}}}],["text",{"_index":545,"title":{},"body":{"interfaces/Data.html":{}}}],["text.append(\"tspan",{"_index":560,"title":{},"body":{"interfaces/Data.html":{}}}],["texte",{"_index":544,"title":{},"body":{"interfaces/Data.html":{}}}],["that's",{"_index":772,"title":{},"body":{"interfaces/Data.html":{}}}],["this.activescrollbar(event",{"_index":653,"title":{},"body":{"interfaces/Data.html":{}}}],["this.area[index",{"_index":602,"title":{},"body":{"interfaces/Data.html":{}}}],["this.area[index]=d3.area",{"_index":454,"title":{},"body":{"interfaces/Data.html":{}}}],["this.buildevent",{"_index":396,"title":{},"body":{"interfaces/Data.html":{}}}],["this.buildstyledata(element,index",{"_index":393,"title":{},"body":{"interfaces/Data.html":{}}}],["this.buildzoom",{"_index":395,"title":{},"body":{"interfaces/Data.html":{}}}],["this.compo.nativeelement.style.padding",{"_index":649,"title":{},"body":{"interfaces/Data.html":{}}}],["this.compo.nativeelement.style.width",{"_index":647,"title":{},"body":{"interfaces/Data.html":{}}}],["this.controldomain",{"_index":664,"title":{},"body":{"interfaces/Data.html":{}}}],["this.controlrange(minlocaltime,lengthlocaltime",{"_index":707,"title":{},"body":{"interfaces/Data.html":{}}}],["this.controlspeedzoom",{"_index":394,"title":{},"body":{"interfaces/Data.html":{}}}],["this.currenttime",{"_index":615,"title":{},"body":{"interfaces/Data.html":{}}}],["this.currenttime2=currenttimechange",{"_index":914,"title":{},"body":{"index.html":{}}}],["this.currenttime=currenttimechange",{"_index":910,"title":{},"body":{"index.html":{}}}],["this.currenttime=pos",{"_index":713,"title":{},"body":{"interfaces/Data.html":{}}}],["this.currenttime=this.scale(this.datazoom,\"xmax",{"_index":712,"title":{},"body":{"interfaces/Data.html":{}}}],["this.currenttimechange.emit(this.currenttime",{"_index":714,"title":{},"body":{"interfaces/Data.html":{}}}],["this.currenttimeselected",{"_index":438,"title":{},"body":{"interfaces/Data.html":{}}}],["this.currenttimeselected=false",{"_index":444,"title":{},"body":{"interfaces/Data.html":{}}}],["this.currenttimeselected=true",{"_index":629,"title":{},"body":{"interfaces/Data.html":{}}}],["this.data",{"_index":373,"title":{},"body":{"interfaces/Data.html":{}}}],["this.data.foreach",{"_index":661,"title":{},"body":{"interfaces/Data.html":{}}}],["this.data.foreach((element,index",{"_index":375,"title":{},"body":{"interfaces/Data.html":{}}}],["this.data1=data.dataexample1",{"_index":901,"title":{},"body":{"index.html":{}}}],["this.data2=data.dataexample2",{"_index":902,"title":{},"body":{"index.html":{}}}],["this.data3=data.dataexample3",{"_index":903,"title":{},"body":{"index.html":{}}}],["this.data4",{"_index":918,"title":{},"body":{"index.html":{}}}],["this.data4=data.dataexample4",{"_index":904,"title":{},"body":{"index.html":{}}}],["this.data5",{"_index":920,"title":{},"body":{"index.html":{}}}],["this.data5=data.dataexample5",{"_index":905,"title":{},"body":{"index.html":{}}}],["this.data6",{"_index":922,"title":{},"body":{"index.html":{}}}],["this.data6=data.dataexample6",{"_index":906,"title":{},"body":{"index.html":{}}}],["this.dataexample1.push(da2",{"_index":210,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.dataexample2.push(this.generatedata(str,\"pc6\",\"#124568\",\"both",{"_index":208,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.dataexample3.push(this.generatedata(str,\"pc5",{"_index":213,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.dataexample3.push(this.generatedata(str,\"pc6\",\"#124568\",\"both",{"_index":216,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.dataexample4.push(this.generatedata(str,\"temperature_salon",{"_index":211,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.dataexample5.push(this.generatedata(str,\"temperature_cuisine",{"_index":217,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.dataexample6.push(this.generatedata(str,\"pc3\",\"green\",\"both",{"_index":219,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.datatest",{"_index":917,"title":{},"body":{"index.html":{}}}],["this.datazoom",{"_index":372,"title":{},"body":{"interfaces/Data.html":{}}}],["this.datazoom.foreach",{"_index":596,"title":{},"body":{"interfaces/Data.html":{}}}],["this.datazoom.foreach((element",{"_index":538,"title":{},"body":{"interfaces/Data.html":{}}}],["this.datazoom[index",{"_index":686,"title":{},"body":{"interfaces/Data.html":{}}}],["this.desactivescrollbar",{"_index":656,"title":{},"body":{"interfaces/Data.html":{}}}],["this.domain",{"_index":733,"title":{},"body":{"interfaces/Data.html":{}}}],["this.drawaxis",{"_index":398,"title":{},"body":{"interfaces/Data.html":{}}}],["this.drawlineandpath",{"_index":399,"title":{},"body":{"interfaces/Data.html":{}}}],["this.drawlinecurrenttime",{"_index":400,"title":{},"body":{"interfaces/Data.html":{}}}],["this.drawscrollbar",{"_index":401,"title":{},"body":{"interfaces/Data.html":{}}}],["this.drawtooltips",{"_index":397,"title":{},"body":{"interfaces/Data.html":{}}}],["this.generateexample(this.str",{"_index":144,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.hideinfo",{"_index":439,"title":{},"body":{"interfaces/Data.html":{}}}],["this.idzoom",{"_index":700,"title":{},"body":{"interfaces/Data.html":{}}}],["this.idzoom=0",{"_index":481,"title":{},"body":{"interfaces/Data.html":{}}}],["this.idzoom=math.round(math.log(this.lengthtime/(this.range[1",{"_index":410,"title":{},"body":{"interfaces/Data.html":{}}}],["this.lastdatalength=this.datazoom.length",{"_index":374,"title":{},"body":{"interfaces/Data.html":{}}}],["this.lengthtime",{"_index":480,"title":{},"body":{"interfaces/Data.html":{}}}],["this.line[index",{"_index":611,"title":{},"body":{"interfaces/Data.html":{}}}],["this.line[index]=d3.line",{"_index":462,"title":{},"body":{"interfaces/Data.html":{}}}],["this.margin.bottom",{"_index":392,"title":{},"body":{"interfaces/Data.html":{}}}],["this.margin.left",{"_index":388,"title":{},"body":{"interfaces/Data.html":{}}}],["this.margin.left).gettime",{"_index":695,"title":{},"body":{"interfaces/Data.html":{}}}],["this.margin.right",{"_index":389,"title":{},"body":{"interfaces/Data.html":{}}}],["this.margin.top",{"_index":391,"title":{},"body":{"interfaces/Data.html":{}}}],["this.maxtime",{"_index":478,"title":{},"body":{"interfaces/Data.html":{}}}],["this.mintime",{"_index":476,"title":{},"body":{"interfaces/Data.html":{}}}],["this.modetooltips",{"_index":520,"title":{},"body":{"interfaces/Data.html":{}}}],["this.movecurrenttime(event",{"_index":435,"title":{},"body":{"interfaces/Data.html":{}}}],["this.parse(str,\"pc5",{"_index":194,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.parse(str,label",{"_index":178,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.parsebool",{"_index":195,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.range",{"_index":706,"title":{},"body":{"interfaces/Data.html":{}}}],["this.range2=rangechange",{"_index":912,"title":{},"body":{"index.html":{}}}],["this.range=rangechange",{"_index":908,"title":{},"body":{"index.html":{}}}],["this.range=this.controlrange(this.range[0],this.range[1",{"_index":412,"title":{},"body":{"interfaces/Data.html":{}}}],["this.range[0",{"_index":413,"title":{},"body":{"interfaces/Data.html":{}}}],["this.range[0]))/math.log(1+this.speedzoom",{"_index":411,"title":{},"body":{"interfaces/Data.html":{}}}],["this.rangechange.emit(this.range",{"_index":708,"title":{},"body":{"interfaces/Data.html":{}}}],["this.renderer.listen(this.compo.nativeelement",{"_index":654,"title":{},"body":{"interfaces/Data.html":{}}}],["this.renderer.listen(this.compo.nativeelement,'mousemove",{"_index":658,"title":{},"body":{"interfaces/Data.html":{}}}],["this.renderer.listen(this.scrollbar.nativeelement",{"_index":650,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scale(this.data,\"xmax",{"_index":479,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scale(this.data,\"xmin",{"_index":477,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scale(this.data,\"ymin\"),this.scale(this.data,\"ymax",{"_index":732,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scalex(d[0",{"_index":456,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scalex.domain([this.mintime,this.maxtime",{"_index":580,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scalex.invert(event.clientx",{"_index":694,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scalex.range([0",{"_index":579,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scaley",{"_index":581,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scaley(d[1",{"_index":459,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scaley.domain(this.controldomain",{"_index":583,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scaley.range([this.svgheight",{"_index":582,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scrollbar.nativeelement.style.backgroundcolor",{"_index":644,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scrollbar.nativeelement.style.borderradius",{"_index":646,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scrollbar.nativeelement.style.height",{"_index":643,"title":{},"body":{"interfaces/Data.html":{}}}],["this.scrollbar.nativeelement.style.width",{"_index":642,"title":{},"body":{"interfaces/Data.html":{}}}],["this.showinfo(event",{"_index":436,"title":{},"body":{"interfaces/Data.html":{}}}],["this.speedzoom=1",{"_index":745,"title":{},"body":{"interfaces/Data.html":{}}}],["this.str",{"_index":142,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["this.svg",{"_index":427,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.append(\"g",{"_index":488,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.append('circle",{"_index":621,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.append('g",{"_index":585,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.append('path",{"_index":598,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.area'+index).data([this.datazoom[index].values",{"_index":675,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.area'+index).remove",{"_index":663,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.currenttimeline').datum([[this.currenttime,this.controldomain()[0]],[this.currenttime,this.svgheight",{"_index":683,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.currenttimeline').remove",{"_index":667,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.currenttimeselector').remove",{"_index":668,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.line'+index).data([this.datazoom[index].values",{"_index":680,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.line'+index).remove",{"_index":662,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.xaxis').call(d3.axisbottom(this.scalex",{"_index":666,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svg.selectall('.yaxis",{"_index":665,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svgheight",{"_index":390,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svgwidth",{"_index":387,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svgwidth+\"px",{"_index":633,"title":{},"body":{"interfaces/Data.html":{}}}],["this.svgwidth+this.margin.left+\"px",{"_index":648,"title":{},"body":{"interfaces/Data.html":{}}}],["this.timeline",{"_index":381,"title":{},"body":{"interfaces/Data.html":{}}}],["this.timeline.nativeelement.height.animval.value",{"_index":386,"title":{},"body":{"interfaces/Data.html":{}}}],["this.timeline.nativeelement.width.animval.value",{"_index":384,"title":{},"body":{"interfaces/Data.html":{}}}],["this.title",{"_index":377,"title":{},"body":{"interfaces/Data.html":{}}}],["this.title+element.label",{"_index":378,"title":{},"body":{"interfaces/Data.html":{}}}],["this.tooltip",{"_index":487,"title":{},"body":{"interfaces/Data.html":{}}}],["this.tooltip.append(\"circle",{"_index":496,"title":{},"body":{"interfaces/Data.html":{}}}],["this.tooltip.append(\"polyline",{"_index":521,"title":{},"body":{"interfaces/Data.html":{}}}],["this.tooltip.append(\"text",{"_index":546,"title":{},"body":{"interfaces/Data.html":{}}}],["this.updatechart",{"_index":408,"title":{},"body":{"interfaces/Data.html":{}}}],["this.updatecurrenttime",{"_index":418,"title":{},"body":{"interfaces/Data.html":{}}}],["this.updatedatazoom(this.range[0],this.range[1",{"_index":415,"title":{},"body":{"interfaces/Data.html":{}}}],["this.updateline",{"_index":669,"title":{},"body":{"interfaces/Data.html":{}}}],["this.updaterange(event",{"_index":659,"title":{},"body":{"interfaces/Data.html":{}}}],["this.updatescrollbar(this.mintime,this.maxtime",{"_index":670,"title":{},"body":{"interfaces/Data.html":{}}}],["this.updatesvg(this.range[0],this.range[1",{"_index":416,"title":{},"body":{"interfaces/Data.html":{}}}],["this.updatetooltips",{"_index":671,"title":{},"body":{"interfaces/Data.html":{}}}],["this.zonescrollbar.nativeelement.style.backgroundcolor",{"_index":638,"title":{},"body":{"interfaces/Data.html":{}}}],["this.zonescrollbar.nativeelement.style.borderradius",{"_index":640,"title":{},"body":{"interfaces/Data.html":{}}}],["this.zonescrollbar.nativeelement.style.height",{"_index":636,"title":{},"body":{"interfaces/Data.html":{}}}],["this.zonescrollbar.nativeelement.style.marginleft",{"_index":634,"title":{},"body":{"interfaces/Data.html":{}}}],["this.zonescrollbar.nativeelement.style.width",{"_index":632,"title":{},"body":{"interfaces/Data.html":{}}}],["this.zoomselected",{"_index":363,"title":{},"body":{"interfaces/Data.html":{}}}],["time",{"_index":404,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["time.push(element[0",{"_index":690,"title":{},"body":{"interfaces/Data.html":{}}}],["timeline",{"_index":283,"title":{},"body":{"interfaces/Data.html":{}}}],["timestamp",{"_index":46,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["timestamp,value",{"_index":239,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["title",{"_index":258,"title":{},"body":{"interfaces/Data.html":{}}}],["title:string",{"_index":300,"title":{},"body":{"interfaces/Data.html":{}}}],["tooltip",{"_index":333,"title":{},"body":{"interfaces/Data.html":{}}}],["tooltips",{"_index":486,"title":{},"body":{"interfaces/Data.html":{}}}],["tooltips's",{"_index":483,"title":{},"body":{"interfaces/Data.html":{}}}],["top",{"_index":303,"title":{},"body":{"interfaces/Data.html":{}}}],["tout",{"_index":542,"title":{},"body":{"interfaces/Data.html":{}}}],["transform",{"_index":184,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["translate",{"_index":431,"title":{},"body":{"interfaces/Data.html":{}}}],["translate(0",{"_index":586,"title":{},"body":{"interfaces/Data.html":{}}}],["true",{"_index":342,"title":{},"body":{"interfaces/Data.html":{}}}],["try",{"_index":857,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":48,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"coverage.html":{},"index.html":{}}}],["types/d3",{"_index":820,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ui",{"_index":552,"title":{},"body":{"interfaces/Data.html":{}}}],["undefined",{"_index":382,"title":{},"body":{"interfaces/Data.html":{}}}],["une",{"_index":423,"title":{},"body":{"interfaces/Data.html":{}}}],["unvalid",{"_index":467,"title":{},"body":{"interfaces/Data.html":{}}}],["update",{"_index":402,"title":{},"body":{"interfaces/Data.html":{}}}],["updatechart",{"_index":660,"title":{},"body":{"interfaces/Data.html":{}}}],["updatecurrenttime",{"_index":682,"title":{},"body":{"interfaces/Data.html":{}}}],["updatecurrenttime(currenttimechange",{"_index":909,"title":{},"body":{"index.html":{}}}],["updatecurrenttime2(currenttimechange",{"_index":913,"title":{},"body":{"index.html":{}}}],["updaterange(rangechange",{"_index":907,"title":{},"body":{"index.html":{}}}],["updaterange2(rangechange",{"_index":911,"title":{},"body":{"index.html":{}}}],["use",{"_index":863,"title":{},"body":{"index.html":{}}}],["v",{"_index":162,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["v.push([element.timestamp,element.value",{"_index":181,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["v2",{"_index":196,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["v2.foreach(element",{"_index":200,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["v2.push([element.timestamp,element.value",{"_index":198,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["valid",{"_index":738,"title":{},"body":{"interfaces/Data.html":{}}}],["value",{"_index":47,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["value's",{"_index":880,"title":{},"body":{"index.html":{}}}],["values",{"_index":183,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{},"index.html":{}}}],["vers",{"_index":512,"title":{},"body":{"interfaces/Data.html":{}}}],["version",{"_index":835,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":577,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["viewchild",{"_index":248,"title":{},"body":{"interfaces/Data.html":{}}}],["viewchild('element",{"_index":293,"title":{},"body":{"interfaces/Data.html":{}}}],["viewchild('root",{"_index":282,"title":{},"body":{"interfaces/Data.html":{}}}],["viewchild('scroll",{"_index":287,"title":{},"body":{"interfaces/Data.html":{}}}],["viewchild('zone",{"_index":289,"title":{},"body":{"interfaces/Data.html":{}}}],["void",{"_index":371,"title":{},"body":{"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["w",{"_index":383,"title":{},"body":{"interfaces/Data.html":{}}}],["want",{"_index":755,"title":{},"body":{"interfaces/Data.html":{}}}],["wheel",{"_index":315,"title":{},"body":{"interfaces/Data.html":{}}}],["wheelevent",{"_index":441,"title":{},"body":{"interfaces/Data.html":{}}}],["width",{"_index":261,"title":{},"body":{"interfaces/Data.html":{},"index.html":{}}}],["width\",\"1",{"_index":534,"title":{},"body":{"interfaces/Data.html":{}}}],["wihch",{"_index":754,"title":{},"body":{"interfaces/Data.html":{}}}],["works",{"_index":272,"title":{},"body":{"interfaces/Data.html":{}}}],["write",{"_index":889,"title":{},"body":{"index.html":{}}}],["x",{"_index":220,"title":{},"body":{"interfaces/DATA.html":{},"interfaces/Data.html":{},"injectables/DataService.html":{}}}],["x((d",{"_index":455,"title":{},"body":{"interfaces/Data.html":{}}}],["x+1",{"_index":221,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["x0",{"_index":693,"title":{},"body":{"interfaces/Data.html":{}}}],["x:number",{"_index":199,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["x:number=0",{"_index":616,"title":{},"body":{"interfaces/Data.html":{}}}],["x=this.getrandomint(x",{"_index":202,"title":{},"body":{"interfaces/DATA.html":{},"injectables/DataService.html":{}}}],["x=this.scalex(d[0",{"_index":618,"title":{},"body":{"interfaces/Data.html":{}}}],["xaxis",{"_index":588,"title":{},"body":{"interfaces/Data.html":{}}}],["xmax",{"_index":750,"title":{},"body":{"interfaces/Data.html":{}}}],["xmin",{"_index":749,"title":{},"body":{"interfaces/Data.html":{}}}],["y",{"_index":271,"title":{},"body":{"interfaces/Data.html":{}}}],["y((d",{"_index":463,"title":{},"body":{"interfaces/Data.html":{}}}],["y0(this.svgheight",{"_index":457,"title":{},"body":{"interfaces/Data.html":{}}}],["y1((d",{"_index":458,"title":{},"body":{"interfaces/Data.html":{}}}],["yaxis",{"_index":591,"title":{},"body":{"interfaces/Data.html":{}}}],["ymax",{"_index":752,"title":{},"body":{"interfaces/Data.html":{}}}],["ymin",{"_index":751,"title":{},"body":{"interfaces/Data.html":{}}}],["zone",{"_index":288,"title":{},"body":{"interfaces/Data.html":{}}}],["zone.js",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["zonescrollbar",{"_index":290,"title":{},"body":{"interfaces/Data.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/BasicLinechartModule.html":{},"interfaces/Data.html":{},"index.html":{},"overview.html":{}}}],["zoomselected",{"_index":356,"title":{},"body":{"interfaces/Data.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/BasicLinechartModule.html":{"url":"modules/BasicLinechartModule.html","title":"module - BasicLinechartModule","body":"\n                   \n\n\n\n\n    Modules\n    BasicLinechartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BasicLinechartModule\n\n\n\ncluster_BasicLinechartModule_declarations\n\n\n\ncluster_BasicLinechartModule_exports\n\n\n\n\nBasicLinechartComponent\n\nBasicLinechartComponent\n\n\n\nBasicLinechartModule\n\nBasicLinechartModule\n\nBasicLinechartModule -->\n\nBasicLinechartComponent->BasicLinechartModule\n\n\n\n\n\nBasicLinechartComponent \n\nBasicLinechartComponent \n\nBasicLinechartComponent  -->\n\nBasicLinechartModule->BasicLinechartComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/basic-linechart/src/lib/basic-linechart.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BasicLinechartComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BasicLinechartComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BasicLinechartComponent } from './basic-linechart.component';\n\n\n\n@NgModule({\n  declarations: [\n    BasicLinechartComponent,\n  ],\n  imports: [\n  ],\n  exports: [\n    BasicLinechartComponent\n  ]\n})\nexport class BasicLinechartModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DATA.html":{"url":"interfaces/DATA.html","title":"interface - DATA","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DATA\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/basic-linechart/src/lib/basic-linechart.service.ts\n        \n\n            \n                Description\n            \n            \n                DATA's format when we extract data from a string \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sensorId\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sensorId\n                                    \n                                \n                                \n                                    \n                                        sensorId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label of sensor in data \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Timestamp\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Data } from './basic-linechart.component';\n\n/**\n * DATA's format when we extract data from a string \n */\ninterface DATA{\n\n  /**\n   * Timestamp\n   */\n  timestamp: number;\n  \n  /**\n   * Value\n   */\n  value: T;\n  \n  /**\n   * Label of sensor in data \n   */\n  sensorId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service that give 6 example of dataset and function to parse DATA and Data from string.\n */\nexport class DataService {\n  \n  /**\n   * str is an example of data's string\n   */\n  private str: string = `  \n  \"2016-07-25 15:47:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-25 19:47:24,459\";\"PC6\";\"ON\"\n  \"2016-07-26 05:47:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-26 06:47:24,459\";\"PC6\";\"ON\"\n  \"2016-07-26 06:59:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-26 18:21:24,459\";\"PC6\";\"ON\"\n  \"2016-07-27 11:00:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-28 08:32:24,459\";\"PC6\";\"ON\"\n  \"2016-07-28 18:15:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-29 09:06:24,459\";\"PC6\";\"ON\"\n  \"2016-07-29 19:36:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-25 15:47:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-25 22:47:24,459\";\"PC5\";\"ON\"\n  \"2016-07-25 22:55:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-26 07:29:24,459\";\"PC5\";\"ON\"\n  \"2016-07-26 20:59:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-27 06:21:24,459\";\"PC5\";\"ON\"\n  \"2016-07-27 13:00:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-28 06:32:24,459\";\"PC5\";\"ON\"\n  \"2016-07-28 14:15:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-29 06:06:24,459\";\"PC5\";\"ON\"\n  \"2016-07-29 19:36:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-25 15:47:19,423\";\"Temperature_Cuisine\";\"26.7\"\n  \"2016-07-25 15:48:20,279\";\"Temperature_Cuisine\";\"26.740000000000002\"\n  \"2016-07-25 15:50:00,776\";\"Temperature_Cuisine\";\"26.76\"\n  \"2016-07-25 15:55:00,275\";\"Temperature_Cuisine\";\"26.72\"\n  \"2016-07-25 16:10:00,202\";\"Temperature_Cuisine\";\"26.68\"\n  \"2016-07-25 16:15:00,197\";\"Temperature_Cuisine\";\"26.64\"\n  \"2016-07-25 16:24:50,493\";\"Temperature_Cuisine\";\"26.560000000000002\"\n  \"2016-07-25 16:29:50,204\";\"Temperature_Cuisine\";\"26.5\"\n  \"2016-07-25 16:34:50,177\";\"Temperature_Cuisine\";\"26.46\"\n  \"2016-07-25 16:39:50,128\";\"Temperature_Cuisine\";\"26.5\"\n  \"2016-07-25 16:44:50,065\";\"Temperature_Cuisine\";\"26.52\"\n  \"2016-07-25 15:47:19,423\";\"Temperature_Salon\";\"26.34\"\n  \"2016-07-25 15:48:05,264\";\"Temperature_Salon\";\"26.38\"\n  \"2016-07-25 15:53:05,275\";\"Temperature_Salon\";\"26.36\"\n  \"2016-07-25 15:58:05,252\";\"Temperature_Salon\";\"26.34\"\n  \"2016-07-25 16:08:05,234\";\"Temperature_Salon\";\"26.32\"\n  \"2016-07-25 16:13:05,237\";\"Temperature_Salon\";\"26.28\"\n  \"2016-07-25 16:23:05,172\";\"Temperature_Salon\";\"26.22\"\n  \"2016-07-25 16:28:05,244\";\"Temperature_Salon\";\"26.16\"\n  \"2016-07-25 16:29:55,490\";\"Temperature_Salon\";\"26.14\"\n  \"2016-07-25 15:47:19,423\";\"PC3\";\"ON\"\n  \"2016-07-25 15:48:20,279\";\"PC3\";\"OFF\"\n  \"2016-07-25 15:50:00,776\";\"PC3\";\"ON\"\n  \"2016-07-25 15:55:00,275\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:10:00,202\";\"PC3\";\"ON\"\n  \"2016-07-25 16:15:00,197\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:24:50,493\";\"PC3\";\"ON\"\n  \"2016-07-25 16:29:50,204\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:34:50,177\";\"PC3\";\"ON\"\n  \"2016-07-25 16:39:50,128\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:44:50,065\";\"PC3\";\"ON\"\n  `;\n\n  \n  /**\n   * Dataset 1\n   */\n  public dataExample1: Data[] = []; \n  \n  /**\n   * Dataset 2\n   */\n  public dataExample2: Data[] = [];\n  \n  /**\n   * Dataset 3\n   */\n  public dataExample3: Data[] = [];\n  \n  /**\n   * Dataset 4\n   */\n  public dataExample4: Data[] = [];\n  \n  /**\n   * Dataset 5\n   */\n  public dataExample5: Data[] = [];\n  \n  /**\n   * Dataset 6\n   */\n  public dataExample6: Data[] = [];\n\n  /**\n   * Constructor\n   * Launch generateExample with parameters this.str to fill all Dataset\n   */\n  constructor() {\n    this.generateExample(this.str);\n  }\n\n  /**\n   * Parse of str to obtain DATA[]\n   * @param str \n   * @param sensorId \n   * @param f \n   * @returns DATA[]\n   */\n  private parse(str: string, sensorId: string, f: (s: string) => T): DATA[] {\n    /**\n     * Const to parse DATA\n     */\n    const L: DATA  [] = str.trim().split(\"\\n\").map(s => s.trim()).filter(s => s!==\"\")\n\n                 .map( s => s.split(\";\").map( s => s.slice(1, -1) ) )\n\n                 .filter( tab => tab[1] === sensorId )\n\n                 .map( ([t, id, v]) => ({\n\n                     timestamp: (new Date((t.replace(\",\", \".\"))).getTime()),\n\n                     value: f(v),\n\n                     sensorId: id\n\n                 }));\n    return L;\n\n  }\n\n  /**\n   * Parse of str to obtain Data[]\n   * @param str \n   * @param label \n   * @param color \n   * @param style \n   * @param interpolation \n   * @param f \n   * @returns Data[]\n   */\n  public generateData(str:string, label:string, color:string, style: \"both\"|\"line\"|\"area\",interpolation: \"step\"|\"linear\", f: (s:string)=>number):Data{\n    let d: DATA[] = this.parse(str,label, f);\n    let v: [number,number][] = [];\n    d.forEach(element =>v.push([element.timestamp,element.value]));\n    let da: Data = {\n      label: label,\n      values: v,\n      color: color,\n      style: style,\n      interpolation: interpolation\n    }\n    return da;\n  }\n\n  /**\n   * Transform string in number\n   * @param s \n   * @returns 1 if s=='ON', 0 if s=='OFF' else -1\n   */\n  public parseBool(s: string):number {\n    if(s=='ON') return 1;\n    else if (s=='OFF') return 0;\n    else return -1;\n  }\n\n  /**\n   * Generate all dataset\n   * @param str \n   */\n  private generateExample(str:string){\n    let d2: DATA[] = this.parse(str,\"PC5\", this.parseBool);\n    let v2: [number,number][] = [];\n    d2.forEach(element =>v2.push([element.timestamp,element.value]));\n    let x:number = 0;\n    v2.forEach(element=> {\n      element[1]=x;\n      x=this.getRandomInt(x);\n    }\n      );\n    let da2: Data = {\n      label: \"PC4\",\n      values: v2,\n      color: \"purple\",\n      style: \"line\",\n      interpolation: \"linear\"\n    }\n    \n    this.dataExample2.push(this.generateData(str,\"PC6\",\"#124568\",\"both\", \"step\",this.parseBool));\n    this.dataExample1.push(da2);\n    this.dataExample4.push(this.generateData(str,\"Temperature_Salon\", \"purple\", \"line\", \"linear\", parseFloat));\n    this.dataExample3.push(this.generateData(str,\"PC5\", \"pink\", \"line\", \"step\", this.parseBool));\n    this.dataExample3.push(this.generateData(str,\"PC6\",\"#124568\",\"both\", \"step\",this.parseBool));\n    this.dataExample5.push(this.generateData(str,\"Temperature_Cuisine\", \"gold\", \"line\", \"step\", parseFloat));\n    this.dataExample6.push(this.generateData(str,\"PC3\",\"green\",\"both\", \"step\",this.parseBool));\n  }\n\n  /**\n   * Get +1 or -1 on the param x\n   * @param x \n   * @returns x+1 or x-1 (random)\n   */\n  private getRandomInt(x:number){\n    let alea: number;\n    if(x==0){\n      return 1;\n    }else{\n      alea=Math.round(Math.random());\n      if(alea==0){\n        return x-1;\n      }else{\n        return x+1;\n      }\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/basic-linechart/src/lib/basic-linechart.component.ts\n        \n\n            \n                Description\n            \n            \n                Data's format for the component\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        color\n                                \n                                \n                                        interpolation\n                                \n                                \n                                        label\n                                \n                                \n                                        style\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Line or area color you can fill with name, hexacode or rgb code.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interpolation\n                                    \n                                \n                                \n                                    \n                                        interpolation:     \"linear\" | \"step\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"linear\" | \"step\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Interpolation of line \nRecommanded : step for discrete values and linear for continuous values\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data's name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:     \"line\" | \"area\" | \"both\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"line\" | \"area\" | \"both\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Style of line\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data's values [timestamp,value][]\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, Renderer2, SimpleChanges, ViewChild } from '@angular/core';\nimport {ScaleTime, ScaleLinear} from 'd3-scale';\nimport {Selection} from 'd3-selection';\nimport * as d3 from 'd3';\n\n/**\n * Data's format for the component\n */\nexport interface Data {\n  /**\n   * Data's name\n   */\n  label: string;\n\n  /**\n   * Data's values [timestamp,value][]\n   */\n  values: [number,number][];\n  /**\n   * Line or area color you can fill with name, hexacode or rgb code.\n   */\n  color: string;\n  /**\n   * Style of line\n   */\n  style: \"line\" | \"area\" | \"both\";\n  /**\n   * Interpolation of line \n   * Recommanded : step for discrete values and linear for continuous values\n   */\n  interpolation: \"linear\" | \"step\";\n}\n\n@Component({\n  selector: 'lib-basic-linechart',\n  template: `\n  \n  {{ title }}\n  \n  \n  \n  `,\n  styles: [\n  ]\n})\nexport class BasicLinechartComponent implements OnInit {\n  /**\n   * Input width of the component\n   * Default value : 900\n   */\n  @Input() width: number = 900;\n  \n  /**\n   * Input height of the compenent\n   * Default value : 200\n   */\n  @Input() height: number = 200;\n  \n  /**\n   * Input data array that the component display\n   * Default value : []\n   */\n  @Input() data: Data[] = [];\n\n  /**\n   * Input domain of the Axis Y\n   * Works only for continuous values\n   * Default value : [0,0]\n   */\n  @Input() domain: [number, number] = [0,0];\n  \n  /**\n   * Input speed of zoom between 0 and 1\n   * Default value : 0.2\n   */\n  @Input() speedZoom: number = 0.2;\n  \n  /**\n   * ElementRef of DOM Element root\n   * It's a svg with the linechart\n   */\n  @ViewChild('root') timeline!: ElementRef;\n\n  /**\n   * ElementRef of DOM Element scroll\n   * It's a div that will be the scrollbar\n   */\n  @ViewChild('scroll') scrollbar!: ElementRef;\n\n  /**\n   * ElementRef of DOM Element zone\n   * It's a div that will be the zone of scrollbar\n   */\n  @ViewChild('zone') zoneScrollbar!: ElementRef;\n\n  /**\n   * ElementRef of DOM Element element\n   * It's a div that contains all the others Dom Element\n   */\n  @ViewChild('element') compo!: ElementRef;\n\n  /**\n   * Input range of timestamp\n   * Default value : [0,0]\n   */\n  @Input() range: [number,number] = [0,0];\n  \n  /**\n   * Output rangeChange that emit range \n   */\n  @Output() rangeChange = new EventEmitter();\n  \n  /**\n   * Input currentTime\n   * Default value : 0\n   */\n  @Input() currentTime: number = 0;\n  \n  /**\n   * Output currentTimeChange that emit currentTime\n   */\n  @Output() currentTimeChange = new EventEmitter();\n  \n  /**\n   * Title of the component\n   */\n  public title:string = 'Timeline : ';\n  \n  /**\n   * Margin of the component\n   */\n  private margin:{top:number,right:number,bottom:number,left:number} = { top: 20, right: 20, bottom: 20, left: 20 }; //marge interne au svg \n  \n  /**\n   * dataZoom is a copy of data with the range specify\n   */\n  private dataZoom: Data[] = [];\n  \n  /**\n   * idZoom is the number of wheel notch\n   */\n  private idZoom: number = 0;\n  \n  /**\n   * It's the smallest timestamp of data\n   */\n  private minTime: number = 0;\n  \n  /**\n   * It's the biggest timestamp of data\n   */\n  private maxTime: number = 0;\n  \n  /**\n   * It's the difference between the smallest and the biggest\n   */\n  private lengthTime: number = 0;\n  \n  /**\n   * Width of the svg\n   */\n  private svgWidth: number = 0;\n  \n  /**\n   * Height of the svg\n   */\n  private svgHeight: number = 0;\n  \n  /**\n   * Scale of the X axis\n   */\n  private scaleX: ScaleTime = d3.scaleTime();\n  \n  /**\n   * Scale of the Y axis\n   */\n  private scaleY: ScaleLinear = d3.scaleLinear();\n\n  /**\n   * svg that contain the linechart and the axis\n   */\n  private svg: any;\n\n  /**\n   * Array of area definition\n   */\n  private area: d3.Area[] = [];\n\n  /**\n   * Array of line definition\n   */\n  private line: d3.Line[] = [];\n\n  /**\n   * Svg definition of the tooltip\n   */\n  private tooltip!: Selection;\n\n  /**\n   * data length before the new change\n   */\n  private lastDatalength:number = 0;\n\n  /**\n   * Mode of the tooltip\n   */\n  private modeToolTips: \"normal\" | \"inverse\" = \"normal\";\n\n  /**\n   * true if the currentTimeline is selected\n   */\n  private currentTimeSelected:boolean = false;\n\n  /**\n   * true if the scrollbar is selected\n   */\n  private scrollbarSelected:boolean = false;\n\n  /**\n   * Last position of the mouse\n   */\n  private lastPos: number = 0;\n\n  /**\n   * true if the CTRL Key of keyBoard is push \n   */\n  private zoomSelected: boolean = false;\n\n  @HostListener('window:keydown', ['$event'])\n  handleKeyDown(event: KeyboardEvent){\n    if(event.ctrlKey&&!this.zoomSelected){\n      this.zoomSelected = true;\n    } \n  }\n  @HostListener('window:keyup', ['$event'])\n  handleKeyUp(){\n    this.zoomSelected = false;\n  }\n  \n  /**\n   * Constructor : Init renderer\n   * @param renderer \n   */\n  constructor(private renderer: Renderer2) {   \n  }\n\n  /**\n   * Copy data in dataZoom, and build title \n   */\n  public ngOnInit(): void {\n    this.dataZoom = [...this.data];\n    this.lastDatalength=this.dataZoom.length;\n    this.data.forEach((element,index) => {\n      if(index==this.data.length-1) this.title = this.title+element.label+'.';\n      else this.title = this.title+element.label + ', ';\n    })\n  }\n\n  /**\n   * Initialize linechart\n   */\n  public ngAfterViewInit(): void {\n    if (this.timeline != undefined) {\n      let w = this.timeline.nativeElement.width.animVal.value;\n      let h = this.timeline.nativeElement.height.animVal.value;\n      this.svgWidth = (w - this.margin.left) - this.margin.right;\n      this.svgHeight = (h - this.margin.top) - this.margin.bottom;\n    }\n    this.data.forEach((element,index) => this.buildStyleData(element,index));\n    this.controlSpeedZoom();\n    this.buildZoom(); \n    this.buildEvent();\n    this.drawToolTips();\n    this.drawAxis();\n    this.drawLineAndPath();\n    this.drawLineCurrentTime();\n    this.drawScrollbar();\n  }\n\n  /**\n   * Update linechart on data, range or current time changes\n   * @param {SimpleChanges} changes \n   */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.data&&!changes.data.firstChange) this.updateChart();\n    if ((changes.data&&!changes.data.firstChange&&this.range[0]!=0&&this.range[1]!=0)||(changes.range&&!changes.range.firstChange)) {\n      this.idZoom=Math.round(Math.log(this.lengthTime/(this.range[1]-this.range[0]))/Math.log(1+this.speedZoom));\n      this.range=this.controlRange(this.range[0],this.range[1]-this.range[0]);\n      if(this.data.length!=0){\n        this.updateDataZoom(this.range[0],this.range[1]);\n        this.updateSvg(this.range[0],this.range[1]);\n      }\n    }\n    if (changes.currentTime&&!changes.currentTime.firstChange&&this.data.length!=0) this.updateCurrentTime();\n}\n\n  /**\n   * Add event listeners on the svg\n   */\n  private buildEvent(): void{ // creer une timeline avec une seul donnée\n    this.svg = d3.select(this.timeline.nativeElement)\n    .append('g')\n    .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n    d3.select(this.timeline.nativeElement).on(\"mousemove\", (event: MouseEvent) => {\n      if(this.currentTimeSelected) this.moveCurrentTime(event);\n      else this.showInfo(event);\n    })\n    .on(\"mouseleave\", () => { this.currentTimeSelected = false; this.hideInfo() })\n    .on(\"wheel\", (event: WheelEvent) => {if(this.data.length!=0)if(this.zoomSelected){this.activeZoom(event)}})\n    .on(\"mouseup\", () => this.currentTimeSelected=false)\n    .on(\"mouseover\", (event: MouseEvent) => event.preventDefault());\n  }\n\n  /**\n   * Build the style (area, line or both) and the interpolation (stpe or linear) of lines\n   * @param {Data} element \n   * @param {number} index \n   */\n  private buildStyleData(element:Data, index:number): void{\n    if(element.style==\"area\" || element.style==\"both\"){\n      if(element.interpolation==\"step\"){\n        this.area[index]=d3.area()\n        .x((d: number[]) => this.scaleX(d[0]))\n        .y0(this.svgHeight)\n        .y1((d: number[]) => this.scaleY(d[1]))\n        .curve(d3.curveStepAfter);\n      }else{\n        this.area[index]=d3.area()\n        .x((d: number[]) => this.scaleX(d[0]))\n        .y0(this.svgHeight)\n        .y1((d: number[]) => this.scaleY(d[1]))\n      }\n    }\n    if(element.style==\"line\" || element.style==\"both\"){\n      if(element.interpolation==\"step\"){\n        this.line[index]=d3.line()\n        .x((d: number[]) => this.scaleX(d[0]))\n        .y((d: number[]) => this.scaleY(d[1]))\n        .curve(d3.curveStepAfter);\n      }else{\n        this.line[index]=d3.line()\n        .x((d: number[]) => this.scaleX(d[0]))\n        .y((d: number[]) => this.scaleY(d[1]))\n      }\n    }\n    if(!this.controlColor(element.color)){\n      console.warn(\"Data with \" + element.label + \" label, has an unvalid color attribute (\" + element.color + \"). Replace with the default color (black).\");\n      element.color=\"black\";\n    } \n  }\n\n  /**\n   * Save information for zoom.\n   */\n  private buildZoom(): void{\n    this.minTime = this.scale(this.data,\"xMin\");\n    this.maxTime = this.scale(this.data,\"xMax\");\n    this.lengthTime = this.maxTime - this.minTime;\n    this.idZoom=0;\n  }\n\n  /**\n   * Draw the tooltips's svg\n   */\n  private drawToolTips(): void{ //creer le tooltips\n    this.tooltip = this.svg.append(\"g\")\n        .attr(\"id\", \"tooltip\")\n        .style(\"display\", \"none\");\n    // Le cercle extérieur bleu clair\n    this.tooltip.append(\"circle\")\n        .attr(\"fill\", \"#CCE5F6\")\n        .attr(\"r\", 10);\n    // Le cercle intérieur bleu foncé\n    this.tooltip.append(\"circle\")\n        .attr(\"fill\", \"#3498db\")\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"stroke-width\", \"1.5px\")\n        .attr(\"r\", 4);\n    // Le tooltip en lui-même avec sa pointe vers le bas\n    // Il faut le dimensionner en fonction du contenu\n    if (this.modeToolTips == \"normal\") {\n      this.tooltip.append(\"polyline\")\n        .attr(\"points\", \"0,0 0,40 75,40  80,45  85,40  160,40  160,0 0,0\")\n        .style(\"fill\", \"#fafafa\")\n        .style(\"stroke\",\"#3498db\")\n        .style(\"opacity\",\"0.9\")\n        .style(\"stroke-width\",\"1\")\n        .attr(\"transform\", \"translate(-80,-50)\");\n      this.dataZoom.forEach((element) => {\n        // Cet élément contiendra tout notre texte\n        let text = this.tooltip.append(\"text\")\n          .style(\"font-size\", \"13px\")\n          .style(\"font-family\", \"Segoe UI\")\n          .style(\"color\", element.color)\n          .style(\"fill\", element.color)\n          .attr(\"transform\", \"translate(-80,-42)\");\n        // Element pour la date avec positionnement spécifique\n        text.append(\"tspan\")\n          .attr(\"dx\", \"7\")\n          .attr(\"dy\", \"5\")\n          .attr(\"id\", \"tooltip-date1\");\n        text.append(\"tspan\")\n          .attr(\"dx\", \"-90\")\n          .attr(\"dy\", \"15\")\n          .attr(\"id\", \"tooltip-date2\");\n      });\n    }else {\n      this.tooltip.append(\"polyline\")\n        .attr(\"points\", \"0,95 , 0,55 , 75,55 , 80,50 , 85,55 , 160,55 , 160,95 0,95\")\n        .style(\"fill\", \"#fafafa\")\n        .style(\"stroke\",\"#3498db\")\n        .style(\"opacity\",\"0.9\")\n        .style(\"stroke-width\",\"1\")\n        .attr(\"transform\", \"translate(-80,-50)\");\n      this.dataZoom.forEach((element) => {\n        // Cet élément contiendra tout notre texte\n        let text = this.tooltip.append(\"text\")\n          .style(\"font-size\", \"13px\")\n          .style(\"font-family\", \"Segoe UI\")\n          .style(\"color\", element.color)\n          .style(\"fill\", element.color)\n          .attr(\"transform\", \"translate(-80,-30)\");\n        // Element pour la date avec positionnement spécifique\n        text.append(\"tspan\")\n          .attr(\"dx\", \"7\")\n          .attr(\"dy\", 50 )\n          .attr(\"id\", \"tooltip-date1\");\n        text.append(\"tspan\")\n          .attr(\"dx\", \"-80\")\n          .attr(\"dy\", \"20\")\n          .attr(\"id\", \"tooltip-date2\");\n      });\n    }\n  }\n\n  /**\n   * Draw horizontal and vertical axis and scale\n   */\n  private drawAxis(): void{\n    this.scaleX.range([0, this.svgWidth]);\n    this.scaleX.domain([this.minTime,this.maxTime]);\n    this.scaleY = d3.scaleLinear();\n    this.scaleY.range([this.svgHeight, 0]);\n    this.scaleY.domain(this.controlDomain());\n    // Configure the X Axis\n    this.svg.append('g')\n      .attr('transform', 'translate(0,' + this.svgHeight + ')')\n      .attr('class', 'xAxis')\n      .call(d3.axisBottom(this.scaleX));\n    // Configure the Y Axis\n    if(this.discreteValue(this.data)){\n      this.svg.append('g')\n      .attr('class', 'yAxis')\n      .call(d3.axisLeft(this.scaleY).ticks(this.scale(this.data,\"yMax\")));\n    }else{\n      this.svg.append('g')\n      .attr('class', 'yAxis')\n      .call(d3.axisLeft(this.scaleY));\n    }\n  }\n\n  /**\n   * Draw lines on the line chart\n   */\n  private drawLineAndPath(): void{\n    this.dataZoom.forEach(\n      (element,index) => {\n        if(element.style==\"area\" || element.style==\"both\"){\n          this.svg.append('path')\n          .datum(this.dataZoom[index].values)\n          .attr('class', 'area'+index)\n          .attr('d', this.area[index])\n          .attr(\"stroke-width\", 0.1)\n          .attr('opacity', 0.3)\n          .style('fill', element.color)\n          .style('stroke', element.color)\n          .style('stroke-width', '2px')\n        }\n        if(element.style==\"line\" || element.style==\"both\"){\n          this.svg.append('path')\n          .datum(element.values)\n          .attr('class', 'line'+index)\n          .attr('d', this.line[index])\n          .style('fill', 'none')\n          .style('stroke', element.color)\n          .style('stroke-width', '2px')\n        }\n      }\n    )\n  }\n\n  /**\n   * Draw the vertical line which represents the current time\n   */\n  private drawLineCurrentTime(): void{\n    if(this.data.length!=0){\n      if(this.currentTime==0){\n        this.currentTime = this.scale(this.data,\"xMin\");\n      }\n      let x:number=0;\n      this.svg.append('path')\n        .datum([[this.currentTime,this.controlDomain()[0]],[this.currentTime,this.svgHeight]])\n        .attr('class', 'currentTimeLine')\n        .attr('d', d3.line()\n          .x((d: number[]) => x=this.scaleX(d[0]))\n          .y((d: number[]) => this.scaleY(d[1])))\n        .style('fill', 'none')\n        .style('stroke', 'red')\n        .style('stroke-width', '3px');\n      this.svg.append('circle')\n        .attr('class', 'currentTimeSelector')\n        .attr('cx', x)\n        .attr('cy', -13)\n        .attr('r', 7)\n        .attr('fill', 'red')\n        .on(\"mousedown\", () => {\n          this.currentTimeSelected=true;\n          this.hideInfo();\n        })\n    }\n  }\n\n  /**\n   * Draw the scrollbar and event listener on it  \n   */\n  private drawScrollbar(): void{\n    this.zoneScrollbar.nativeElement.style.width = this.svgWidth+\"px\";\n    this.zoneScrollbar.nativeElement.style.marginLeft = this.margin.left+ \"px\";\n    this.zoneScrollbar.nativeElement.style.height = \"20px\";\n    this.zoneScrollbar.nativeElement.style.backgroundColor = \"lightgrey\";\n    this.zoneScrollbar.nativeElement.style.borderRadius = \"10px\";\n    this.scrollbar.nativeElement.style.width = this.svgWidth+\"px\";\n    this.scrollbar.nativeElement.style.height = \"20px\";\n    this.scrollbar.nativeElement.style.backgroundColor = \"grey\";\n    this.scrollbar.nativeElement.style.borderRadius = \"10px\";\n    this.compo.nativeElement.style.width = this.svgWidth+this.margin.left+\"px\";\n    this.compo.nativeElement.style.padding = \"10px 10px 10px 10px\";\n    this.renderer.listen(this.scrollbar.nativeElement, 'mousedown', (event:MouseEvent) => this.activeScrollbar(event));\n    this.renderer.listen(this.compo.nativeElement, 'mouseleave', () => this.desactiveScrollbar());\n    this.renderer.listen(this.compo.nativeElement, 'mouseup', () => this.desactiveScrollbar());\n    this.renderer.listen(this.compo.nativeElement,'mousemove', (event:MouseEvent) => this.updateRange(event));\n  }\n\n  /**\n   * Update all the line chart (horizontal and vertical axis and scale, data, lines and range) on data changes. \n   */\n  private updateChart(): void{\n    this.dataZoom = [...this.data];\n    this.data.forEach(\n      (element,index) => {\n        this.buildStyleData(element,index);\n        if(element.style==\"area\") this.svg.selectAll('.line'+index).remove();\n        if(element.style==\"line\") this.svg.selectAll('.area'+index).remove();\n        this.title = 'Timeline : ';\n        if(index==this.data.length-1) this.title = this.title+element.label+'.';\n        else this.title = this.title+element.label + ', ';\n    })\n    this.buildZoom();\n    this.scaleX.domain([this.minTime,this.maxTime]);\n    this.scaleY.range([this.svgHeight, 0]);\n    this.controlDomain();\n    this.scaleY.domain(this.controlDomain());\n    if(this.discreteValue(this.data)){\n      this.svg.selectAll('.yAxis')\n      .call(d3.axisLeft(this.scaleY).ticks(this.scale(this.data,\"yMax\")));\n    }else{\n      this.svg.selectAll('.yAxis')\n      .call(d3.axisLeft(this.scaleY));\n    }\n    this.svg.selectAll('.xAxis').call(d3.axisBottom(this.scaleX));\n    this.svg.selectAll('.currentTimeLine').remove();\n    this.svg.selectAll('.currentTimeSelector').remove();\n    this.updateLine();\n    this.drawLineCurrentTime();\n    this.updateScrollbar(this.minTime,this.maxTime);\n    this.updateToolTips();\n    for(let index=this.dataZoom.length; index {\n      if(element.style==\"area\" || element.style==\"both\"){\n        areaUpdate= this.svg.selectAll('.area'+index).data([this.dataZoom[index].values]);\n        areaUpdate\n        .enter()\n        .append(\"path\")\n        .attr('class', 'area'+index)\n        .merge(areaUpdate)\n        .attr('d', this.area[index])\n        .attr(\"stroke-width\", 0.1)\n        .attr('opacity', 0.3)\n        .style('fill', element.color)\n        .style('stroke', element.color)\n        .style('stroke-width', '2px');\n      }\n      if(element.style==\"line\" || element.style==\"both\"){\n        lineUpdate= this.svg.selectAll('.line'+index).data([this.dataZoom[index].values]);\n        lineUpdate\n        .enter()\n        .append(\"path\")\n        .attr('class', 'line'+index)\n        .merge(lineUpdate)\n        .attr('d', this.line[index])\n        .style('fill', 'none')\n        .style('stroke', element.color)\n        .style('stroke-width', '2px')\n      }\n    });\n  }\n\n  /**\n   * Update the position of the current time line\n   */\n  private updateCurrentTime(): void{\n    let lineUpdate = this.svg.selectAll('.currentTimeLine').datum([[this.currentTime,this.controlDomain()[0]],[this.currentTime,this.svgHeight]]);\n    let x:number=0;\n    lineUpdate.enter()\n    .append(\"path\")\n    .attr('class', 'currentTimeLine')\n    .merge(lineUpdate)\n    .attr('d', d3.line()\n      .x((d: number[]) => x=this.scaleX(d[0]))\n      .y((d: number[]) => this.scaleY(d[1])))\n    .style('fill', 'none')\n    .style('stroke', 'red')\n    .style('stroke-width', '3px');\n    if(this.currentTime>=this.scale(this.dataZoom,\"xMin\")&&this.currentTime {\n      this.dataZoom[index]={\n        label: element.label,\n        values: element.values.filter((element: number[]) => min  {\n      time=[];\n      element.values.forEach((element => time.push(element[0])));\n      let i = d3.bisectLeft(time, min)-1;\n      if(i>=0&&i time.push(element[0]));\n      let x0 = this.scaleX.invert(event.clientX - this.margin.left).getTime();\n      let x = d3.bisectRight(time, x0);\n      if(x>this.dataZoom[0].values.length-1)x=this.dataZoom[0].values.length-1;\n      else if (x 0&&this.idZoom>0)||event.deltaY0&&this.idZoom>0){\n        this.idZoom--;\n      }else if(event.deltaY200){\n        let minLocalTime = (lastMinLocalTime-pos)*(lengthLocalTime/lastLengthLocalTime) + pos;\n        this.range = this.controlRange(minLocalTime,lengthLocalTime);\n        this.updateDataZoom(this.range[0],this.range[1]);\n        this.updateSvg(this.range[0],this.range[1]);\n        this.rangeChange.emit(this.range);\n      }else{\n        this.idZoom--;\n      }\n    }\n  }\n\n  /**\n   * Update the value of current time on the movement of the mouse\n   * @param {MouseEvent} event \n   */\n  private moveCurrentTime(event: MouseEvent): void{\n    event.preventDefault();\n    let pos = this.scaleX.invert(event.clientX-this.margin.left).getTime();\n    if(posthis.scale(this.dataZoom,\"xMax\")){\n      this.currentTime=this.scale(this.dataZoom,\"xMax\");\n    }else{\n      this.currentTime=pos;\n    }\n    this.updateCurrentTime();\n    this.currentTimeChange.emit(this.currentTime);\n  }\n\n  /**\n   * Control the range based on data's timestamp and the new range\n   * @param {number} min of the new range\n   * @param {number} length of the new range\n   * @returns a adjusted range based on data's timestamp\n   */\n  private controlRange(min:number, length:number) : [number,number]{\n    if(this.minTime>min) min=this.minTime;\n    let max = min + length;\n    if(this.maxTimemin) min=this.minTime;\n    return [min,max];\n  }\n\n  /**\n   * Control the domain based on data's value type and the input domain\n   * @returns a new domain auto-scaled if the input domain is equal to [0,0] or the data's value are positive integers, else return the input domain \n   */\n  private controlDomain():[number,number]{\n    if((this.domain[0]==0&&this.domain[1]==0)||this.discreteValue(this.data)){\n      return [this.scale(this.data,\"yMin\"),this.scale(this.data,\"yMax\")];\n    }else{\n      return this.domain;\n    }\n  }\n\n  /**\n   * Control the color based on css-colors-name and hex-color-code\n   * @param {string} color \n   * @returns false if the param color isn't a css-colors-name or a valid hex-color-code\n   */\n  private controlColor(color: string):boolean{\n    let s = new Option().style;\n    s.color = color;\n    return s.color!=\"\";\n  }\n  \n  /**\n   * Control the speedZoom if it isn't between 0 and 1.\n   */\n  private controlSpeedZoom(): void{\n    if(this.speedZoom1){\n      this.speedZoom=1;\n    }\n  }\n\n  /** \n   * Determine the minimum or maximum of the horizontal or vertical axis in data\n   * @param {Data[]} data Array of Data\n   * @param {\"xMin\" | \"xMax\" | \"yMin\" | \"yMax\"} s precise wihch scale we want\n   * @returns the value that matches with the parameter s in data\n   */\n  private scale(data: Data[], s: \"xMin\" | \"xMax\" | \"yMin\" | \"yMax\"): number {\n    let res: number = 0;\n    data.forEach(\n      (elements,index) => elements.values.forEach\n      ((element,i) => {\n        if((s==\"yMin\"&&((i==0&&index==0)||element[1]res))) res=element[1];\n        else if((s==\"xMin\"&&((i==0&&index==0)||element[0]res))) res=element[0];\n      })\n    )\n    return res;\n  }\n\n  /** \n  *Check type of data (positive integer or float)\n  *@param {Data[]} data Array of Data\n  *@returns false if there is at least one value in data that's not a positive integer\n  */\n  private discreteValue(data: Data[]): boolean{\n    for(let i:number=0;i\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/basic-linechart/src/lib/basic-linechart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dataExample1\n                            \n                            \n                                    Public\n                                dataExample2\n                            \n                            \n                                    Public\n                                dataExample3\n                            \n                            \n                                    Public\n                                dataExample4\n                            \n                            \n                                    Public\n                                dataExample5\n                            \n                            \n                                    Public\n                                dataExample6\n                            \n                            \n                                    Private\n                                str\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                generateData\n                            \n                            \n                                    Private\n                                generateExample\n                            \n                            \n                                    Private\n                                getRandomInt\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                    Public\n                                parseBool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:122\n                            \n                        \n\n                \n                    \n                            Constructor\nLaunch generateExample with parameters this.str to fill all Dataset\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            generateData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateData(str: string, label: string, color: string, style: \"both\" | \"line\" | \"area\", interpolation: \"step\" | \"linear\", f: (s: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:172\n                \n            \n\n\n            \n                \n                    Parse of str to obtain Data[]\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                            \"both\" | \"line\" | \"area\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interpolation\n                                    \n                                            \"step\" | \"linear\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    f\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Data\n\n                    \n                    \n                        Data[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateExample\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateExample(str: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:201\n                \n            \n\n\n            \n                \n                    Generate all dataset\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRandomInt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandomInt(x: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:233\n                \n            \n\n\n            \n                \n                    Get +1 or -1 on the param x\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        x+1 or x-1 (random)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(str: string, sensorId: string, f: (s: string) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:139\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Parse of str to obtain DATA[]\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sensorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    f\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DATA[]\n\n                    \n                    \n                        DATA[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parseBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseBool(s: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:191\n                \n            \n\n\n            \n                \n                    Transform string in number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    s\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 if s=='ON', 0 if s=='OFF' else -1\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataExample1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:97\n                            \n                        \n\n                \n                    \n                        Dataset 1\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataExample2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:102\n                            \n                        \n\n                \n                    \n                        Dataset 2\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataExample3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:107\n                            \n                        \n\n                \n                    \n                        Dataset 3\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataExample4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:112\n                            \n                        \n\n                \n                    \n                        Dataset 4\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataExample5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:117\n                            \n                        \n\n                \n                    \n                        Dataset 5\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataExample6\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:122\n                            \n                        \n\n                \n                    \n                        Dataset 6\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            str\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : `  \n  \"2016-07-25 15:47:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-25 19:47:24,459\";\"PC6\";\"ON\"\n  \"2016-07-26 05:47:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-26 06:47:24,459\";\"PC6\";\"ON\"\n  \"2016-07-26 06:59:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-26 18:21:24,459\";\"PC6\";\"ON\"\n  \"2016-07-27 11:00:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-28 08:32:24,459\";\"PC6\";\"ON\"\n  \"2016-07-28 18:15:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-29 09:06:24,459\";\"PC6\";\"ON\"\n  \"2016-07-29 19:36:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-25 15:47:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-25 22:47:24,459\";\"PC5\";\"ON\"\n  \"2016-07-25 22:55:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-26 07:29:24,459\";\"PC5\";\"ON\"\n  \"2016-07-26 20:59:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-27 06:21:24,459\";\"PC5\";\"ON\"\n  \"2016-07-27 13:00:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-28 06:32:24,459\";\"PC5\";\"ON\"\n  \"2016-07-28 14:15:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-29 06:06:24,459\";\"PC5\";\"ON\"\n  \"2016-07-29 19:36:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-25 15:47:19,423\";\"Temperature_Cuisine\";\"26.7\"\n  \"2016-07-25 15:48:20,279\";\"Temperature_Cuisine\";\"26.740000000000002\"\n  \"2016-07-25 15:50:00,776\";\"Temperature_Cuisine\";\"26.76\"\n  \"2016-07-25 15:55:00,275\";\"Temperature_Cuisine\";\"26.72\"\n  \"2016-07-25 16:10:00,202\";\"Temperature_Cuisine\";\"26.68\"\n  \"2016-07-25 16:15:00,197\";\"Temperature_Cuisine\";\"26.64\"\n  \"2016-07-25 16:24:50,493\";\"Temperature_Cuisine\";\"26.560000000000002\"\n  \"2016-07-25 16:29:50,204\";\"Temperature_Cuisine\";\"26.5\"\n  \"2016-07-25 16:34:50,177\";\"Temperature_Cuisine\";\"26.46\"\n  \"2016-07-25 16:39:50,128\";\"Temperature_Cuisine\";\"26.5\"\n  \"2016-07-25 16:44:50,065\";\"Temperature_Cuisine\";\"26.52\"\n  \"2016-07-25 15:47:19,423\";\"Temperature_Salon\";\"26.34\"\n  \"2016-07-25 15:48:05,264\";\"Temperature_Salon\";\"26.38\"\n  \"2016-07-25 15:53:05,275\";\"Temperature_Salon\";\"26.36\"\n  \"2016-07-25 15:58:05,252\";\"Temperature_Salon\";\"26.34\"\n  \"2016-07-25 16:08:05,234\";\"Temperature_Salon\";\"26.32\"\n  \"2016-07-25 16:13:05,237\";\"Temperature_Salon\";\"26.28\"\n  \"2016-07-25 16:23:05,172\";\"Temperature_Salon\";\"26.22\"\n  \"2016-07-25 16:28:05,244\";\"Temperature_Salon\";\"26.16\"\n  \"2016-07-25 16:29:55,490\";\"Temperature_Salon\";\"26.14\"\n  \"2016-07-25 15:47:19,423\";\"PC3\";\"ON\"\n  \"2016-07-25 15:48:20,279\";\"PC3\";\"OFF\"\n  \"2016-07-25 15:50:00,776\";\"PC3\";\"ON\"\n  \"2016-07-25 15:55:00,275\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:10:00,202\";\"PC3\";\"ON\"\n  \"2016-07-25 16:15:00,197\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:24:50,493\";\"PC3\";\"ON\"\n  \"2016-07-25 16:29:50,204\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:34:50,177\";\"PC3\";\"ON\"\n  \"2016-07-25 16:39:50,128\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:44:50,065\";\"PC3\";\"ON\"\n  `\n                        \n                    \n                        \n                            \n                                    Defined in projects/basic-linechart/src/lib/basic-linechart.service.ts:37\n                            \n                        \n\n                \n                    \n                        str is an example of data's string\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Data } from './basic-linechart.component';\n\n/**\n * DATA's format when we extract data from a string \n */\ninterface DATA{\n\n  /**\n   * Timestamp\n   */\n  timestamp: number;\n  \n  /**\n   * Value\n   */\n  value: T;\n  \n  /**\n   * Label of sensor in data \n   */\n  sensorId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service that give 6 example of dataset and function to parse DATA and Data from string.\n */\nexport class DataService {\n  \n  /**\n   * str is an example of data's string\n   */\n  private str: string = `  \n  \"2016-07-25 15:47:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-25 19:47:24,459\";\"PC6\";\"ON\"\n  \"2016-07-26 05:47:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-26 06:47:24,459\";\"PC6\";\"ON\"\n  \"2016-07-26 06:59:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-26 18:21:24,459\";\"PC6\";\"ON\"\n  \"2016-07-27 11:00:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-28 08:32:24,459\";\"PC6\";\"ON\"\n  \"2016-07-28 18:15:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-29 09:06:24,459\";\"PC6\";\"ON\"\n  \"2016-07-29 19:36:24,459\";\"PC6\";\"OFF\"\n  \"2016-07-25 15:47:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-25 22:47:24,459\";\"PC5\";\"ON\"\n  \"2016-07-25 22:55:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-26 07:29:24,459\";\"PC5\";\"ON\"\n  \"2016-07-26 20:59:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-27 06:21:24,459\";\"PC5\";\"ON\"\n  \"2016-07-27 13:00:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-28 06:32:24,459\";\"PC5\";\"ON\"\n  \"2016-07-28 14:15:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-29 06:06:24,459\";\"PC5\";\"ON\"\n  \"2016-07-29 19:36:24,459\";\"PC5\";\"OFF\"\n  \"2016-07-25 15:47:19,423\";\"Temperature_Cuisine\";\"26.7\"\n  \"2016-07-25 15:48:20,279\";\"Temperature_Cuisine\";\"26.740000000000002\"\n  \"2016-07-25 15:50:00,776\";\"Temperature_Cuisine\";\"26.76\"\n  \"2016-07-25 15:55:00,275\";\"Temperature_Cuisine\";\"26.72\"\n  \"2016-07-25 16:10:00,202\";\"Temperature_Cuisine\";\"26.68\"\n  \"2016-07-25 16:15:00,197\";\"Temperature_Cuisine\";\"26.64\"\n  \"2016-07-25 16:24:50,493\";\"Temperature_Cuisine\";\"26.560000000000002\"\n  \"2016-07-25 16:29:50,204\";\"Temperature_Cuisine\";\"26.5\"\n  \"2016-07-25 16:34:50,177\";\"Temperature_Cuisine\";\"26.46\"\n  \"2016-07-25 16:39:50,128\";\"Temperature_Cuisine\";\"26.5\"\n  \"2016-07-25 16:44:50,065\";\"Temperature_Cuisine\";\"26.52\"\n  \"2016-07-25 15:47:19,423\";\"Temperature_Salon\";\"26.34\"\n  \"2016-07-25 15:48:05,264\";\"Temperature_Salon\";\"26.38\"\n  \"2016-07-25 15:53:05,275\";\"Temperature_Salon\";\"26.36\"\n  \"2016-07-25 15:58:05,252\";\"Temperature_Salon\";\"26.34\"\n  \"2016-07-25 16:08:05,234\";\"Temperature_Salon\";\"26.32\"\n  \"2016-07-25 16:13:05,237\";\"Temperature_Salon\";\"26.28\"\n  \"2016-07-25 16:23:05,172\";\"Temperature_Salon\";\"26.22\"\n  \"2016-07-25 16:28:05,244\";\"Temperature_Salon\";\"26.16\"\n  \"2016-07-25 16:29:55,490\";\"Temperature_Salon\";\"26.14\"\n  \"2016-07-25 15:47:19,423\";\"PC3\";\"ON\"\n  \"2016-07-25 15:48:20,279\";\"PC3\";\"OFF\"\n  \"2016-07-25 15:50:00,776\";\"PC3\";\"ON\"\n  \"2016-07-25 15:55:00,275\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:10:00,202\";\"PC3\";\"ON\"\n  \"2016-07-25 16:15:00,197\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:24:50,493\";\"PC3\";\"ON\"\n  \"2016-07-25 16:29:50,204\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:34:50,177\";\"PC3\";\"ON\"\n  \"2016-07-25 16:39:50,128\";\"PC3\";\"OFF\"\n  \"2016-07-25 16:44:50,065\";\"PC3\";\"ON\"\n  `;\n\n  \n  /**\n   * Dataset 1\n   */\n  public dataExample1: Data[] = []; \n  \n  /**\n   * Dataset 2\n   */\n  public dataExample2: Data[] = [];\n  \n  /**\n   * Dataset 3\n   */\n  public dataExample3: Data[] = [];\n  \n  /**\n   * Dataset 4\n   */\n  public dataExample4: Data[] = [];\n  \n  /**\n   * Dataset 5\n   */\n  public dataExample5: Data[] = [];\n  \n  /**\n   * Dataset 6\n   */\n  public dataExample6: Data[] = [];\n\n  /**\n   * Constructor\n   * Launch generateExample with parameters this.str to fill all Dataset\n   */\n  constructor() {\n    this.generateExample(this.str);\n  }\n\n  /**\n   * Parse of str to obtain DATA[]\n   * @param str \n   * @param sensorId \n   * @param f \n   * @returns DATA[]\n   */\n  private parse(str: string, sensorId: string, f: (s: string) => T): DATA[] {\n    /**\n     * Const to parse DATA\n     */\n    const L: DATA  [] = str.trim().split(\"\\n\").map(s => s.trim()).filter(s => s!==\"\")\n\n                 .map( s => s.split(\";\").map( s => s.slice(1, -1) ) )\n\n                 .filter( tab => tab[1] === sensorId )\n\n                 .map( ([t, id, v]) => ({\n\n                     timestamp: (new Date((t.replace(\",\", \".\"))).getTime()),\n\n                     value: f(v),\n\n                     sensorId: id\n\n                 }));\n    return L;\n\n  }\n\n  /**\n   * Parse of str to obtain Data[]\n   * @param str \n   * @param label \n   * @param color \n   * @param style \n   * @param interpolation \n   * @param f \n   * @returns Data[]\n   */\n  public generateData(str:string, label:string, color:string, style: \"both\"|\"line\"|\"area\",interpolation: \"step\"|\"linear\", f: (s:string)=>number):Data{\n    let d: DATA[] = this.parse(str,label, f);\n    let v: [number,number][] = [];\n    d.forEach(element =>v.push([element.timestamp,element.value]));\n    let da: Data = {\n      label: label,\n      values: v,\n      color: color,\n      style: style,\n      interpolation: interpolation\n    }\n    return da;\n  }\n\n  /**\n   * Transform string in number\n   * @param s \n   * @returns 1 if s=='ON', 0 if s=='OFF' else -1\n   */\n  public parseBool(s: string):number {\n    if(s=='ON') return 1;\n    else if (s=='OFF') return 0;\n    else return -1;\n  }\n\n  /**\n   * Generate all dataset\n   * @param str \n   */\n  private generateExample(str:string){\n    let d2: DATA[] = this.parse(str,\"PC5\", this.parseBool);\n    let v2: [number,number][] = [];\n    d2.forEach(element =>v2.push([element.timestamp,element.value]));\n    let x:number = 0;\n    v2.forEach(element=> {\n      element[1]=x;\n      x=this.getRandomInt(x);\n    }\n      );\n    let da2: Data = {\n      label: \"PC4\",\n      values: v2,\n      color: \"purple\",\n      style: \"line\",\n      interpolation: \"linear\"\n    }\n    \n    this.dataExample2.push(this.generateData(str,\"PC6\",\"#124568\",\"both\", \"step\",this.parseBool));\n    this.dataExample1.push(da2);\n    this.dataExample4.push(this.generateData(str,\"Temperature_Salon\", \"purple\", \"line\", \"linear\", parseFloat));\n    this.dataExample3.push(this.generateData(str,\"PC5\", \"pink\", \"line\", \"step\", this.parseBool));\n    this.dataExample3.push(this.generateData(str,\"PC6\",\"#124568\",\"both\", \"step\",this.parseBool));\n    this.dataExample5.push(this.generateData(str,\"Temperature_Cuisine\", \"gold\", \"line\", \"step\", parseFloat));\n    this.dataExample6.push(this.generateData(str,\"PC3\",\"green\",\"both\", \"step\",this.parseBool));\n  }\n\n  /**\n   * Get +1 or -1 on the param x\n   * @param x \n   * @returns x+1 or x-1 (random)\n   */\n  private getRandomInt(x:number){\n    let alea: number;\n    if(x==0){\n      return 1;\n    }else{\n      alea=Math.round(Math.random());\n      if(alea==0){\n        return x-1;\n      }else{\n        return x+1;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/basic-linechart/src/lib/basic-linechart.component.ts\n            \n            component\n            BasicLinechartComponent\n            \n                95 %\n                (67/70)\n            \n        \n        \n            \n                \n                projects/basic-linechart/src/lib/basic-linechart.component.ts\n            \n            interface\n            Data\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/basic-linechart/src/lib/basic-linechart.service.ts\n            \n            injectable\n            DataService\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                projects/basic-linechart/src/lib/basic-linechart.service.ts\n            \n            interface\n            DATA\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.0.3\n        \n            @angular/common : ~12.0.3\n        \n            @angular/compiler : ~12.0.3\n        \n            @angular/core : ~12.0.3\n        \n            @angular/forms : ~12.0.3\n        \n            @angular/platform-browser : ~12.0.3\n        \n            @angular/platform-browser-dynamic : ~12.0.3\n        \n            @angular/router : ~12.0.3\n        \n            @types/d3 : ^6.7.0\n        \n            d3 : ^6.7.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.1.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBasicLinechart\nThis library was generated with Angular CLI version 12.0.3.\nExample on :  https://projet-ter-mitton-pinard.github.io/\nPatch 0.9.3 notes\n\nBug fix on : zoom and scrollbar\nDelete file of data example because it was too heavy\n\nInstallation\n\nRun npm install https://github.com/PROJET-TER-MITTON-PINARD/lib-basic-linechart#main or npm install basic-linechart to install.\n\nRun npm install d3 and npm install @types/d3 to install pearDependencies.\n\n\nSummary\nThis package contains, a linechart component and some data's examples to try it.\nOn the linechart component you can : \n\nzoom with ctrl+wheel\nmove the horizontal scrollbar, scroll the time\nmove the vertical current time line \n\nYou can synchronize the time range and the current time line on several components. \nHow to use\n\nIn your app.module.ts, you must add BasicLinechartModule to imports of @NgModule. \n\nIn your app.component.html, you can add the component : \n\n\nParameters of the component\nNo parameters are required.\n\nInput [data]: Data[] default value : [], data displayed in the component (specified Data in the section below)\nInput [width]: number default value : 900, width of the component\nInput [height]: number default value : 200, height of the component\nInput [domain]: [number,number] default value : [0,0], domain of value (only for continuous values)\nInput [range]: [number,number] default value : [0,0], range of timestamp that we display in component \nInput [currenTime]: number default value : 0, timestamp for the current time line\nInput [speedZoom]: number ]0;1] default value : 0.2   \nOutput (rangeChange): [number,number] to bind with a function in your app, to synchronize components ranges \nOutput (currenTimeChange): number to bind with a function in your app, to synchronize components currentTime \n\n/!\\ Don't mix dataset with different value's type (continuous, positive integer) in one component.\n/!\\ Don't mix dataset with different range of timestamp in one component.\n/!\\ Don't bind range on components that have dataset with different ranges of timestamp\nInterface Data\nRepresents one dataset. You can add an array of dataset in the component.\ninterface Data {\n  label: string;\n  values: [number,number][]; //[timestamp,value]\n  color: string;\n  style: \"line\" | \"area\" | \"both\";\n  interpolation: \"linear\" | \"step\";\n}DataService\nContains function parseBool that you can use in generateData for boolean value.\nContains function generateData, which you can use to parse Data from a dataset str :\npublic generateData(str:string, label:string, color:string, style: \"both\"|\"line\"|\"area\",interpolation: \"step\"|\"linear\", f: (s:string)=>number):Data/!\\ str format example : \n`\"2016-07-25 15:47:24,459\";\"PC6\";\"OFF\"\n\"2016-07-25 19:47:24,459\";\"PC6\";\"ON\"`/!\\ Fill parameter f with parseBool or parseFloat\nExamples : \ngenerateData(\"PC6\",\"#124568\",\"both\", \"step\",parseBool)\ngenerateData(\"Temperature_Salon\", \"purple\", \"line\", \"linear\", parseFloat)Contains dataExamples : Data[]. You can import them to test the component (show in the example below).\nExample\napp.component.ts\nWrite in the main class :\n  public data1:Data[]=[];\n  public data2:Data[]=[];\n  public data3:Data[]=[];\n  public data4:Data[]=[];\n  public data5:Data[]=[];\n  public data6:Data[]=[];\n  public datatest:Data[]=[];\n  public range: [number, number] = [0,0];\n  public currentTime : number =0;\n  public range2: [number, number] = [0,0];\n  public currentTime2 : number =0;\n\n  constructor(data : DataService){\n    this.data1=data.dataExample1;\n    this.data2=data.dataExample2;\n    this.data3=data.dataExample3;\n    this.data4=data.dataExample4;\n    this.data5=data.dataExample5;\n    this.data6=data.dataExample6;\n  }\n  public updateRange(rangeChange: [number,number]){\n    this.range=rangeChange;\n  }\n\n  public updateCurrentTime(currentTimeChange: number ){\n    this.currentTime=currentTimeChange;\n  }\n\n  public updateRange2(rangeChange: [number,number]){\n    this.range2=rangeChange;\n  }\n\n  public updateCurrentTime2(currentTimeChange: number ){\n    this.currentTime2=currentTimeChange;\n  }\n\n  public change(i: number){\n    if(i==1) this.datatest = this.data4;\n    if(i==2) this.datatest = this.data5;\n    if(i==3) this.datatest = this.data6;\n  }app.component.html\nWrite :\n\n\n\n\n\nData 4\nData 5\nData 6\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BasicLinechartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BasicLinechartModule\n\n\n\ncluster_BasicLinechartModule_declarations\n\n\n\ncluster_BasicLinechartModule_exports\n\n\n\n\nBasicLinechartComponent\n\nBasicLinechartComponent\n\n\n\nBasicLinechartModule\n\nBasicLinechartModule\n\nBasicLinechartModule -->\n\nBasicLinechartComponent->BasicLinechartModule\n\n\n\n\n\nBasicLinechartComponent \n\nBasicLinechartComponent \n\nBasicLinechartComponent  -->\n\nBasicLinechartModule->BasicLinechartComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
